

----STARTUP---- (18 November 2021 21:22:20) as /home/martin/Documentos/facultad/trabajos_practicos/algo3/repo/Resoluciones/Ejercicio7/Ejercicio7.image!


TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #ReceptiveAccountTest category: 'ServiciosFinancieros-Ejercicio' stamp: 'MG 11/18/2021 21:22:50'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:10:43'!
        test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.

	self assert: 0 equals: account balance
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:14:20'!
    test02DepositIncreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount  new.
	Deposit register: 100 * peso on: account.
		
	self assert: 100 * peso equals: account balance
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:14:24'!
                test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 * peso on: account.
	Withdraw register: 50 * peso on: account.
		
	self assert: 50 * peso equals: account balance
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:10:14'!
      test04WithdrawValueMustBePositive 

	| account withdrawValue |
	
	account := ReceptiveAccount new.
	withdrawValue := 50 * peso.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: account) value
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:10:22'!
                        test05ReceptiveAccountKnowsRegisteredTransactions 

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 * peso on: account.
	withdraw := Withdraw register: 50 * peso on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:12:14'!
            test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit :=  Deposit for: 100 * peso.
	withdraw := Withdraw for: 50 * peso.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:12:23'!
           test07AccountKnowsItsTransactions 

	| account deposit |
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 50 * peso on: account.
		
	self assert: 1 equals: account transactions size.
	self assert: (account transactions includes: deposit).
! !

Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #AccountTransaction category: 'ServiciosFinancieros-Ejercicio' stamp: 'MG 11/18/2021 21:22:51'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!AccountTransaction methodsFor: 'value' stamp: 'HernanWilkinson 9/12/2011 12:25' overrides: 16881508!
          value 

	self subclassResponsibility ! !

"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!

AccountTransaction class
	instanceVariableNames: ''!

!classDefinition: 'AccountTransaction class' category: 'ServiciosFinancieros-Ejercicio' stamp: 'MG 11/18/2021 21:22:51'!
AccountTransaction class
	instanceVariableNames: ''!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'NR 10/17/2019 03:22:00'!
                            register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !

AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Deposit category: 'ServiciosFinancieros-Ejercicio' stamp: 'MG 11/18/2021 21:22:51'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Deposit methodsFor: 'initialization' stamp: 'HernanWilkinson 7/13/2011 18:45'!
                             initializeFor: aValue

	value := aValue ! !
!Deposit methodsFor: 'value' stamp: 'HernanWilkinson 7/13/2011 18:38' overrides: 50331755!
                         value

	^ value! !

"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!

Deposit class
	instanceVariableNames: ''!

!classDefinition: 'Deposit class' category: 'ServiciosFinancieros-Ejercicio' stamp: 'MG 11/18/2021 21:22:51'!
Deposit class
	instanceVariableNames: ''!
!Deposit class methodsFor: 'instance creation' stamp: 'HernanWilkinson 7/13/2011 18:38'!
                     for: aValue

	^ self new initializeFor: aValue ! !

AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Withdraw category: 'ServiciosFinancieros-Ejercicio' stamp: 'MG 11/18/2021 21:22:51'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Withdraw methodsFor: 'initialization' stamp: 'HernanWilkinson 7/13/2011 18:46'!
              initializeFor: aValue

	value := aValue ! !
!Withdraw methodsFor: 'value' stamp: 'HernanWilkinson 7/13/2011 18:33' overrides: 50331755!
                        value

	^ value! !

"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!

Withdraw class
	instanceVariableNames: ''!

!classDefinition: 'Withdraw class' category: 'ServiciosFinancieros-Ejercicio' stamp: 'MG 11/18/2021 21:22:51'!
Withdraw class
	instanceVariableNames: ''!
!Withdraw class methodsFor: 'instance creation' stamp: 'HernanWilkinson 7/13/2011 18:33'!
                 for: aValue

	^ self new initializeFor: aValue ! !

Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'ServiciosFinancieros-Ejercicio' stamp: 'MG 11/18/2021 21:22:51'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'NR 10/17/2019 15:06:56' overrides: 16896425!
             initialize

	transactions := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'HAW 5/23/2019 15:19:32'!
                          balance

	^transactions sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'NR 10/17/2019 03:28:43'!
                           hasRegistered: aTransaction

	^ transactions includes: aTransaction 
! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'HernanWilkinson 7/13/2011 18:37'!
                               register: aTransaction

	transactions add: aTransaction 
! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'HernanWilkinson 7/13/2011 18:37'!
           transactions 

	^ transactions copy! !

----End fileIn of /home/martin/Documentos/facultad/trabajos_practicos/algo3/consignas/07-ServiciosFinancieros/ServiciosFinancieros-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MG 11/18/2021 21:22:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:22:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:22:58'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MG 11/18/2021 21:22:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MG 11/18/2021 21:22:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MG 11/18/2021 21:22:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MG 11/18/2021 21:22:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:22:58'!
FAILURE!
!Withdraw methodsFor: 'value' stamp: 'MG 11/18/2021 21:29:44' prior: 50331830 overrides: 50331755!
                  value

	^ value negative.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:29:49'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:29:56'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:29:56'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:29:59'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:29:59'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MG 11/18/2021 21:30:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:30:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:30:16'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:30:16'!
ERROR!
!Withdraw methodsFor: 'value' stamp: 'MG 11/18/2021 21:30:31' prior: 50331923 overrides: 50331755!
          value

	^ value.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:30:36'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:30:36'!
FAILURE!
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'MG 11/18/2021 21:34:39' prior: 50331866!
                   balance
	|balance|
	balance := 0 * peso.
	transactions ifEmpty: [ ^balance ].
	transactions do: [ :aTransaction | 
		aTransaction class = Deposit ifTrue: [
			balance:= balance + aTransaction value].
		aTransaction class = Withdraw ifTrue:[
			balance:= balance - aTransaction value
		] 
	].! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:34:43'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:34:43'!
FAILURE!
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'MG 11/18/2021 21:35:04' prior: 50331974!
balance
	|balance|
	balance := 0 * peso.
	transactions ifEmpty: [ ^balance ].
	transactions do: [ :aTransaction | 
		aTransaction class = Deposit ifTrue: [
			balance:= balance + aTransaction value].
		aTransaction class = Withdraw ifTrue:[
			balance:= balance - aTransaction value
		] 
	].
	^balance.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:35:08'!
PASSED!
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'MG 11/18/2021 21:35:19' prior: 50331994!
                   balance
	|balance|
	balance := 0 * peso.
	transactions do: [ :aTransaction | 
		aTransaction class = Deposit ifTrue: [
			balance:= balance + aTransaction value].
		aTransaction class = Withdraw ifTrue:[
			balance:= balance - aTransaction value
		] 
	].
	^balance.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:35:21'!
PASSED!
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'MG 11/18/2021 21:36:58' prior: 50332011!
                        balance
	|balance|
	balance := 0 * peso.
	self makeTransactionSummay: balance.
	^balance.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:37:08'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:37:08'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MG 11/18/2021 21:37:26'!
                        makeTransactionSummay: aSimpleMeasure 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MG 11/18/2021 21:39:20' prior: 50332041!
                      makeTransactionSummay: theBalance 
	! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'MG 11/18/2021 21:39:34' prior: 50332027!
                         balance
	|balance|
	balance := 0 * peso.
	transactions do: [ :aTransaction | 
		aTransaction class = Deposit ifTrue: [
			balance := balance + aTransaction value].
		aTransaction class = Withdraw ifTrue:[
			balance := balance - aTransaction value
		] 
	].
	^balance.
	! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:39:38'!
PASSED!

!methodRemoval: ReceptiveAccount #makeTransactionSummay: stamp: 'MG 11/18/2021 21:39:43'!
makeTransactionSummay: theBalance 
	!
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'MG 11/18/2021 21:42:33' prior: 50332052!
                   balance
	|balance|
	balance := 0 * peso.
	transactions do: [ :aTransaction | 
		 balance := aTransaction sumValueIn: balance.
	].
	^balance.
	! !
!AccountTransaction methodsFor: 'nil' stamp: 'MG 11/18/2021 21:43:10'!
       sumValueIn: theBalance
	self subclassResponsibility. ! !
!Deposit methodsFor: 'nil' stamp: 'MG 11/18/2021 21:43:35' overrides: 50332079!
                       sumValueIn: theBalance
	^theBalance + self value.! !
!Withdraw methodsFor: 'nil' stamp: 'MG 11/18/2021 21:43:43' overrides: 50332079!
                          sumValueIn: theBalance
	^theBalance - self value.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:43:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MG 11/18/2021 21:44:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:44:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:44:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MG 11/18/2021 21:44:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MG 11/18/2021 21:44:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MG 11/18/2021 21:44:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MG 11/18/2021 21:44:58'!
PASSED!
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'MG 11/18/2021 21:49:42' prior: 50332072!
balance
	|balance|
	balance := 0 * peso.
	transactions do: [ :aTransaction | balance := aTransaction sumValueIn: balance. ].
	^balance.
	! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'MG 11/18/2021 21:49:54' prior: 50332124!
                    balance

	|balance|
	balance := 0 * peso.
	transactions do: [ :aTransaction | balance := aTransaction sumValueIn: balance. ].
	^balance.
	! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'MG 11/18/2021 21:49:58' prior: 50332132!
                   balance

	| balance |
	balance := 0 * peso.
	transactions do: [ :aTransaction | balance := aTransaction sumValueIn: balance. ].
	^balance.
	! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'MG 11/18/2021 21:54:35' prior: 50332140!
                 balance

	^transactions sum: [ :aTransaction | aTransaction value ] ifEmpty: [0]
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MG 11/18/2021 21:54:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:54:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:54:37'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MG 11/18/2021 21:54:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MG 11/18/2021 21:54:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MG 11/18/2021 21:54:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MG 11/18/2021 21:54:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:54:37'!
FAILURE!
!Withdraw methodsFor: 'value' stamp: 'MG 11/18/2021 21:54:47' prior: 50331962 overrides: 50331755!
                         value

	^ value negated.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MG 11/18/2021 21:54:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:54:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:54:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MG 11/18/2021 21:54:49'!
FAILURE!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MG 11/18/2021 21:54:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MG 11/18/2021 21:54:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MG 11/18/2021 21:54:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MG 11/18/2021 21:54:49'!
FAILURE!
!Withdraw methodsFor: 'value' stamp: 'MG 11/18/2021 21:55:26' prior: 50332185 overrides: 50331755!
  value

	^ value.! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'MG 11/18/2021 21:49:58' prior: 50332148!
             balance

	| balance |
	balance := 0 * peso.
	transactions do: [ :aTransaction | balance := aTransaction sumValueIn: balance. ].
	^balance.
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MG 11/18/2021 21:55:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:55:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/18/2021 21:55:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MG 11/18/2021 21:55:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MG 11/18/2021 21:55:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MG 11/18/2021 21:55:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MG 11/18/2021 21:55:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MG 11/19/2021 00:55:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MG 11/19/2021 00:55:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MG 11/19/2021 00:55:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MG 11/19/2021 00:55:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MG 11/19/2021 00:55:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MG 11/19/2021 00:55:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MG 11/19/2021 00:55:17'!
PASSED!

----QUIT----(19 November 2021 00:55:25) Ejercicio7.image priorSource: 135!

----STARTUP---- (24 November 2021 23:30:15) as /home/thiago/Documentos/Thiago/Algoritmos y Programacion III/Ejercicios-Algo3-2021/Ejercicios-algo3-2021/Resoluciones/Ejercicio7/Ejercicio7.image!


TestCase subclass: #TestXXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #TestXXX category: 'ServiciosFinancieros-Ejercicio' stamp: 'tg 11/24/2021 23:32:34'!
TestCase subclass: #TestXXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'tg 11/24/2021 23:37:51'!
Object subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!TestXXX methodsFor: 'nil' stamp: 'tg 11/24/2021 23:37:42'!
                             test01
	|originAccount destinationAccount|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: -50 * peso equals: (originAccount balance).
	self assert: 50 * peso equals: (destinationAccount balance).! !

!testRun: #TestXXX #test01 stamp: 'tg 11/24/2021 23:37:55'!
ERROR!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'tg 11/24/2021 23:38:15'!
  from: aReceptiveAccount to: aReceptiveAccount2 for: aSimpleMeasure 
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'tg 11/24/2021 23:43:48' prior: 50332327!
                           from: anOriginAccount to: aDestinationAccount for: anAmount 
	Deposit register: anAmount on: aDestinationAccount.
	Withdraw register: anAmount on: anOriginAccount.! !

!testRun: #TestXXX #test01 stamp: 'tg 11/24/2021 23:44:16'!
PASSED!

!testRun: #TestXXX #test01 stamp: 'tg 11/24/2021 23:44:16'!
PASSED!
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/24/2021 23:45:30'!
   test02
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: 50 * peso equals: aTransfer value.
! !

!testRun: #TestXXX #test02 stamp: 'tg 11/24/2021 23:45:46'!
FAILURE!

Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'tg 11/24/2021 23:46:10'!
Object subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Transfer methodsFor: 'nil' stamp: 'tg 11/24/2021 23:46:28' overrides: 16896425!
                           initialize
	value := 50 * peso.! !

!testRun: #TestXXX #test01 stamp: 'tg 11/24/2021 23:46:31'!
PASSED!

!testRun: #TestXXX #test02 stamp: 'tg 11/24/2021 23:46:31'!
FAILURE!

!testRun: #TestXXX #test02 stamp: 'tg 11/24/2021 23:46:31'!
FAILURE!
!Transfer methodsFor: 'as yet unclassified' stamp: 'tg 11/24/2021 23:47:07' overrides: 16881508!
           value
	^50 * peso.
	! !

!methodRemoval: Transfer #initialize stamp: 'tg 11/24/2021 23:47:10'!
initialize
	value := 50 * peso.!

!testRun: #TestXXX #test01 stamp: 'tg 11/24/2021 23:47:19'!
PASSED!

!testRun: #TestXXX #test02 stamp: 'tg 11/24/2021 23:47:19'!
FAILURE!

!testRun: #TestXXX #test02 stamp: 'tg 11/24/2021 23:47:19'!
FAILURE!
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/24/2021 23:48:13' prior: 50332346!
                   test02
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: 50 * peso equals: (aTransfer value).
! !

!testRun: #TestXXX #test02 stamp: 'tg 11/24/2021 23:48:14'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'tg 11/24/2021 23:49:24' prior: 50332334!
                             from: anOriginAccount to: aDestinationAccount for: anAmount 
	
	Deposit register: anAmount on: aDestinationAccount.
	Withdraw register: anAmount on: anOriginAccount.
	
	^self new.
! !

!testRun: #TestXXX #test01 stamp: 'tg 11/24/2021 23:49:26'!
PASSED!

!testRun: #TestXXX #test02 stamp: 'tg 11/24/2021 23:49:26'!
PASSED!

!testRun: #TestXXX #test02 stamp: 'tg 11/24/2021 23:49:34'!
PASSED!
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/24/2021 23:50:16' prior: 50332398!
                             test02
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: 50 * peso equals: (aTransfer value).
! !
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/24/2021 23:53:06'!
                          test03
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: -50 * peso equals: aTransfer withdraw.! !
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/24/2021 23:54:05' prior: 50332441!
         test03
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: 50 * peso equals: aTransfer withdrawAmount.! !

!testRun: #TestXXX #test03 stamp: 'tg 11/24/2021 23:54:21'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'tg 11/24/2021 23:54:35'!
               withdrawAmount
	self shouldBeImplemented.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'tg 11/24/2021 23:54:52' prior: 50332467!
                      withdrawAmount
	^50 * peso.! !

!testRun: #TestXXX #test03 stamp: 'tg 11/24/2021 23:54:55'!
PASSED!

!testRun: #TestXXX #test01 stamp: 'tg 11/24/2021 23:54:55'!
PASSED!

!testRun: #TestXXX #test02 stamp: 'tg 11/24/2021 23:54:55'!
PASSED!

!testRun: #TestXXX #test03 stamp: 'tg 11/24/2021 23:54:55'!
PASSED!
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/24/2021 23:55:26'!
 test04
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: 50 * peso equals: aTransfer depositAmount.! !
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:00:34' prior: 50332484!
     test04
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: 50 * peso equals: aTransfer depositAmount.
	
	"deposit withdrawOrigin"! !
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:03:56' prior: 50332496!
         test04
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
		
! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:05:25' prior: 50332413!
                     from: anOriginAccount to: aDestinationAccount for: anAmount 
	
	Deposit register: anAmount on: aDestinationAccount.
	Withdraw register: anAmount on: anOriginAccount.
	
	^self new.
! !

!testRun: #TestXXX #test01 stamp: 'tg 11/25/2021 00:05:32'!
PASSED!

!testRun: #TestXXX #test02 stamp: 'tg 11/25/2021 00:05:32'!
PASSED!

!testRun: #TestXXX #test03 stamp: 'tg 11/25/2021 00:05:32'!
PASSED!

!testRun: #TestXXX #test04 stamp: 'tg 11/25/2021 00:05:32'!
PASSED!
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:06:55' prior: 50332509!
                        test04
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
		
	! !

!testRun: #TestXXX #test04 stamp: 'tg 11/25/2021 00:07:07'!
PASSED!

!testRun: #TestXXX #test01 stamp: 'tg 11/25/2021 00:07:07'!
PASSED!

!testRun: #TestXXX #test02 stamp: 'tg 11/25/2021 00:07:07'!
PASSED!

!testRun: #TestXXX #test03 stamp: 'tg 11/25/2021 00:07:07'!
PASSED!

!testRun: #TestXXX #test04 stamp: 'tg 11/25/2021 00:07:07'!
PASSED!
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:07:30' prior: 50332538!
  test04
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	
		
	! !
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:24:08' prior: 50332559!
                       test04
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	destinationAccount originOf: aTransfer.
		
	! !
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:25:04' prior: 50332570!
                test04
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: originAccount equals: (destinationAccount orginiOf: aTransfer).
		
	! !
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:25:16' prior: 50332582!
           test04
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: originAccount equals: (destinationAccount originOf: aTransfer).
		
	! !

!testRun: #TestXXX #test04 stamp: 'tg 11/25/2021 00:25:21'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:25:42'!
              originOf: aTransfer 
	self shouldBeImplemented.! !
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:30:36' prior: 50332595!
                 test04
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: originAccount equals:  (destinationAccount originOf: aTransfer).
		
	! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:30:58' prior: 50332610!
 originOf: aTransfer 
	^aTransfer depositAccount.! !

!methodRemoval: Transfer #withdrawAmount stamp: 'tg 11/25/2021 00:31:20'!
withdrawAmount
	^50 * peso.!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'tg 11/25/2021 00:31:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'tg 11/25/2021 00:31:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'tg 11/25/2021 00:31:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'tg 11/25/2021 00:31:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'tg 11/25/2021 00:31:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'tg 11/25/2021 00:31:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'tg 11/25/2021 00:31:23'!
PASSED!

!testRun: #TestXXX #test01 stamp: 'tg 11/25/2021 00:31:26'!
PASSED!

!testRun: #TestXXX #test02 stamp: 'tg 11/25/2021 00:31:26'!
PASSED!

!testRun: #TestXXX #test03 stamp: 'tg 11/25/2021 00:31:26'!
ERROR!

!testRun: #TestXXX #test04 stamp: 'tg 11/25/2021 00:31:26'!
ERROR!

!methodRemoval: TestXXX #test03 stamp: 'tg 11/25/2021 00:31:35'!
test03
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: 50 * peso equals: aTransfer withdrawAmount.!
!Transfer methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:32:38'!
                     depositAccount
! !
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:34:37'!
 test03
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: originAccount equals:  (destinationAccount originOf: aTransfer).
		
	! !

!methodRemoval: TestXXX #test04 stamp: 'tg 11/25/2021 00:34:37'!
test04
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: originAccount equals:  (destinationAccount originOf: aTransfer).
		
	!
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:35:39' prior: 50332685!
                test03
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: destinationAccount equals:  (originAccount originOf: aTransfer).
		
	! !
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:35:56' prior: 50332710!
          test03
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: destinationAccount equals:  (originAccount originOf: aTransfer).
		
	self assert: originAccount equals:  (destinationAccount originOf: aTransfer).
! !
!TestXXX methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:37:20' prior: 50332723!
                            test03
	|originAccount destinationAccount aTransfer|
	
	originAccount := ReceptiveAccount new. 
	destinationAccount := ReceptiveAccount new.
	
	aTransfer := Transfer from: originAccount to: destinationAccount for: 50 * peso.
	
	self assert: destinationAccount equals:  (originAccount destinationOf: aTransfer).
		
	self assert: originAccount equals:  (destinationAccount originOf: aTransfer).
! !

!testRun: #TestXXX #test03 stamp: 'tg 11/25/2021 00:37:31'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:37:38'!
                          destinationOf: aTransfer 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:37:55' prior: 50332757!
   destinationOf: aTransfer 
	^aTransfer destinationAccount.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:38:09'!
                      destinationAccount
! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:38:35'!
                            withdrawAccount
! !

!methodRemoval: Transfer #destinationAccount stamp: 'tg 11/25/2021 00:38:35'!
destinationAccount
!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:39:00' prior: 50332762!
   destinationOf: aTransfer 
	^aTransfer withdrawAccount.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:39:31' prior: 50332384 overrides: 16881508!
                     value
	^value.
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:42:15' prior: 50332520!
         from: anOriginAccount to: aDestinationAccount for: anAmount 
	
	self new from: anOriginAccount to: aDestinationAccount for: anAmount.
	
	
! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:42:21' prior: 50332788!
               from: anOriginAccount to: aDestinationAccount for: anAmount 
	
	^self new from: anOriginAccount to: aDestinationAccount for: anAmount.
	
	
! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:43:57'!
    from: anOriginAccount to: aDestinationAccount for: 	anAmount
	
	Deposit register: anAmount on: aDestinationAccount.
	Withdraw register: anAmount on: anOriginAccount.
	
! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'tg 11/25/2021 00:44:11' prior: 50332803!
                       from: anOriginAccount to: aDestinationAccount for: 	anAmount
	
	Deposit register: anAmount on: aDestinationAccount.
	Withdraw register: anAmount on: anOriginAccount.
	value := anAmount.
	
! !

!testRun: #TestXXX #test01 stamp: 'tg 11/25/2021 00:44:16'!
PASSED!

!testRun: #TestXXX #test02 stamp: 'tg 11/25/2021 00:44:16'!
PASSED!

!testRun: #TestXXX #test03 stamp: 'tg 11/25/2021 00:44:16'!
FAILURE!

!testRun: #TestXXX #test03 stamp: 'tg 11/25/2021 00:44:16'!
FAILURE!

----SNAPSHOT----(25 November 2021 00:47:43) Ejercicio7.image priorSource: 20239!

----QUIT----(25 November 2021 00:50:27) Ejercicio7.image priorSource: 37717!