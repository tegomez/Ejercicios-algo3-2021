

----STARTUP---- (21 October 2021 19:41:42) as /home/thiago/Documentos/Thiago/Algoritmos y Programacion III/Ejercicios-Algo3-2021/Ejercicios-algo3-2021/Resoluciones/Ejercicio3/Ejercicio3Parte2.image!


----End fileIn of /home/thiago/Documentos/Thiago/Algoritmos y Programacion III/Ejercicios-Algo3-2021/Ejercicios-algo3-2021/Resoluciones/Ejercicio3/Numeros-Parte2-Ejercicio.st----!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 19:46:50' prior: 50332044 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		
		].
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 19:51:59' prior: 50332285 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (anAdder denominator) * (self value).
		newDenominator :=  anAdder denominator.
	
		^newNumerator / newDenominator 
		].
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 19:54:10' prior: 50332294 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((anAdder denominator) * (self value)) + anAdder numerator.
		newDenominator :=  anAdder denominator.
	
		^newNumerator / newDenominator 
		].
! !

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'tg 10/21/2021 19:54:21'!
PASSED!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 19:57:03' prior: 50332169 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^anAdder + self.
		].
		
! !

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 19:57:36'!
PASSED!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 19:58:35' prior: 50332326 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^anAdder + self.
		].
		
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:00:13' prior: 50332038 overrides: 50331968!
* aMultiplier 

	^self class with: value * aMultiplier integerValue
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:01:46' prior: 50332359 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((aMultiplier denominator) * (self value)) + aMultiplier numerator.
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].

	^self class with: value * aMultiplier integerValue
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:02:24' prior: 50332365 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((aMultiplier denominator) * (self value)) + (aMultiplier numerator).
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].

	^self class with: value * aMultiplier integerValue
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:03:32' prior: 50332382 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((aMultiplier denominator) * (self value)) * (aMultiplier numerator).
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].

	^self class with: value * aMultiplier integerValue
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:03:56' prior: 50332400 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((aMultiplier denominator) * (self value)) * (aMultiplier numerator).
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].	! !

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:04:03'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:04:03'!
FAILURE!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:04:42' prior: 50332418 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((aMultiplier denominator) * (self value)) * aMultiplier numerator.
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].	! !

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:04:50'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:04:50'!
FAILURE!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:07:22' prior: 50332440 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((aMultiplier denominator) * (self value)) * aMultiplier numerator.
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].	! !

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:09:51'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:09:51'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:11:11'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:11:11'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:11:34'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:11:34'!
FAILURE!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:18:16' prior: 50332308 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((anAdder denominator) * (self value)) + anAdder numerator.
		newDenominator :=  anAdder denominator.
	
		^newNumerator / newDenominator 
		"^Fraccion with:(anAdder denominaror) + anAddr numerator over: anAdder denominator "
		].
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:19:34' prior: 50332498 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((anAdder denominator) * (self value)) + anAdder numerator.
		newDenominator :=  anAdder denominator.
	
		^newNumerator / newDenominator 
		"^Fraccion with:(anAdder denominaror  * self) + anAddr numerator over: anAdder denominator "
		].
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:21:43' prior: 50332462 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aMultiplier denominator * self) * aMultiplier numerator.
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].	! !

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:21:53'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:21:53'!
FAILURE!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:23:01' prior: 50332534 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aMultiplier denominator * self) * aMultiplier numerator.
		newDenominator :=  aMultiplier denominator.
		^newNumerator / newDenominator 
		].	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:24:54' prior: 50332556 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aMultiplier denominator * self) * aMultiplier numerator.
		newDenominator := self * aMultiplier denominator.
		^newNumerator / newDenominator 
		].	! !

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:24:59'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:24:59'!
FAILURE!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:25:35' prior: 50332571 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aMultiplier denominator * self) * aMultiplier numerator.
		newDenominator := aMultiplier denominator * aMultiplier denominator.
		^newNumerator / newDenominator 
		].	! !

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:25:41'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:25:46'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 20:25:49'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:25:52'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'tg 10/21/2021 20:39:41'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'tg 10/21/2021 20:39:41'!
ERROR!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:46:15' prior: 50332516 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((anAdder denominator) * (self value)) + anAdder numerator.
		newDenominator :=  anAdder denominator.
	
		^newNumerator / newDenominator 
		"^self * anAdder denominator + anAdder numerator / anAdder denominator".
		].
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:05:23' prior: 50332759 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		"| newNumerator newDenominator |
		
		newNumerator := ((anAdder denominator) * (self value)) + anAdder numerator.
		newDenominator :=  anAdder denominator.
	
		^newNumerator / newDenominator 
		"
		^self * anAdder denominator + anAdder numerator / anAdder denominator.
		].
! !

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'tg 10/21/2021 21:05:30'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 21:05:33'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 21:05:35'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 21:05:37'!
PASSED!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:05:58' prior: 50332776 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [

		^self * anAdder denominator + anAdder numerator / anAdder denominator.
		].
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:07:23' prior: 50332806 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
	
		^self * anAdder denominator + anAdder numerator / anAdder denominator.
		].
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:09:28'!
mmmm: anEnteroAugend

	^anEnteroAugend * self denominator + self numerator / self denominator
		
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:10:21' prior: 50332827!
mmmm: anEnteroAugend

	^anEnteroAugend * self denominator + self numerator / self denominator.
		
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:12:30'!
beAddedTo: anEnteroAugend

	^anEnteroAugend * self denominator + self numerator / self denominator.
		
! !

!methodRemoval: Fraccion #mmmm: stamp: 'tg 10/21/2021 21:12:30'!
mmmm: anEnteroAugend

	^anEnteroAugend * self denominator + self numerator / self denominator.
		
!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:13:36' prior: 50332344 overrides: 50331973!
+ anAdder 
	"(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^anAdder + self.
		].
	"
	anAdder beAddedTo: self.
! !

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'tg 10/21/2021 21:13:45'!
PASSED!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:15:25' prior: 50332840!
beAddedTo: anAugend

	^anAugend * self denominator + self numerator / self denominator.
		
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:15:46' prior: 50332853 overrides: 50331973!
+ anAdder 
	"(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^anAdder + self.
		].
	"
	anAdder beAddedTo: self.
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:16:09'!
beAddedToAnEntero: anAugend

	^anAugend * self denominator + self numerator / self denominator.
		
! !

!methodRemoval: Fraccion #beAddedTo: stamp: 'tg 10/21/2021 21:16:14'!
beAddedTo: anAugend

	^anAugend * self denominator + self numerator / self denominator.
		
!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:17:22'!
beAddedToAnEntero: anAugend
	
	^Entero with: anAugend integerValue + self integerValue.
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:17:44' prior: 50332817 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
	
		^self * anAdder denominator + anAdder numerator / anAdder denominator.
		].
	^anAdder beAddedToAnEntero: self.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:17:49' prior: 50332910 overrides: 50331973!
+ anAdder 

	^anAdder beAddedToAnEntero: self.! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:18:04' prior: 50332878 overrides: 50331973!
+ anAdder 
	"(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^anAdder + self.
		].
	"
	anAdder beAddedToAnEntero: self.
! !

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'tg 10/21/2021 21:18:20'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 21:18:22'!
ERROR!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 21:18:22'!
ERROR!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:19:11' prior: 50332928 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^anAdder + self.
		].
! !

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 21:19:24'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 21:19:26'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'tg 10/21/2021 21:24:19'!
PASSED!

----QUIT----(21 October 2021 21:25:58) Ejercicio3Parte2.image priorSource: 325!

----STARTUP---- (21 October 2021 21:28:12) as /home/thiago/Documentos/Thiago/Algoritmos y Programacion III/Ejercicios-Algo3-2021/Ejercicios-algo3-2021/Resoluciones/Ejercicio3/Ejercicio3Parte2.image!


----QUIT----(21 October 2021 21:28:38) Ejercicio3Parte2.image priorSource: 42400!

----STARTUP---- (22 October 2021 00:30:36) as /home/tin-gprieto/Documentos/facultad/trabajos_practicos/algo3/repo/Resoluciones/Ejercicio3/Parte2/Ejercicio3Parte2.image!


!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/22/2021 00:31:02'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/22/2021 00:31:08'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/22/2021 00:31:09'!
PASSED!

----STARTUP---- (24 October 2021 17:35:29) as /home/tin-gprieto/Documentos/facultad/trabajos_practicos/algo3/repo/Resoluciones/Ejercicio3/Parte2/Ejercicio3Parte2.image!


!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 17:35:46'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:00:06'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:00:06'!
ERROR!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:14:58' prior: 50332162 overrides: 50331968!
* aMultiplier
 
	(aMultiplier isKindOf: Fraccion) ifTrue: [
		^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)
		].
	(aMultiplier isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aMultiplier).
		newDenominator := denominator.
	
		^newNumerator / newDenominator 
		].
	

	
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:15:32' prior: 50333268 overrides: 50331968!
* aMultiplier
 
	(aMultiplier isKindOf: Fraccion) ifTrue: [
		^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)
		].
	(aMultiplier isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aMultiplier integerValue).
		newDenominator := denominator.
	
		^newNumerator / newDenominator 
		].
	

	
	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
FAILURE!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:15:43'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:15:43'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:15:43'!
FAILURE!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:15:43'!
FAILURE!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
FAILURE!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:16:23'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:16:23'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:16:23'!
FAILURE!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:16:23'!
FAILURE!
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:21:53' prior: 50332056 overrides: 50331982!
/ aDivisor 
	(aDivisor isKindOf: Entero) ifTrue: [
		^Fraccion with: self over: aDivisor
		].
 	(aDivisor isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aDivisor denominator * self).
		newDenominator := aDivisor numerator.
		^newNumerator / newDenominator 
		].	
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:22:17' prior: 50333283 overrides: 50331968!
* aMultiplier
 
	(aMultiplier isKindOf: Fraccion) ifTrue: [
		^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)
		].
	(aMultiplier isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aMultiplier).
		newDenominator := denominator.
	
		^newNumerator / newDenominator 
		].
	

	
	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:22:24'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:22:24'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:35:46'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:35:46'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:36:17'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:36:17'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:36:17'!
PASSED!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:39:12' prior: 50332191 overrides: 50331982!
/ aDivisor 

	(aDivisor isKindOf: Fraccion) ifTrue: [
		^(numerator * aDivisor denominator) / (denominator * aDivisor numerator)
		].
 	(aDivisor isKindOf: Entero ) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := numerator.
		newDenominator := (denominator * aDivisor).
		^newNumerator / newDenominator 
		].		
	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:39:15'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:41:35'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:41:35'!
PASSED!
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:49:54' prior: 50332050 overrides: 50331977!
- aSubtrahend 

	(aSubtrahend isKindOf: Entero) ifTrue: [
		^ self class with: value - aSubtrahend integerValue.
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (self * aSubtrahend denominator) - (aSubtrahend numerator).
		newDenominator := aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].

	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
ERROR!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
ERROR!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
ERROR!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:54:20' prior: 50332180 overrides: 50331977!
- aSubtrahend 
	(aSubtrahend isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (aSubtrahend numerator) - (self * aSubtrahend denominator).
		newDenominator := aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].


	
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:54:22' prior: 50334740 overrides: 50331977!
- aSubtrahend 

	(aSubtrahend isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (aSubtrahend numerator) - (self * aSubtrahend denominator).
		newDenominator := aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].


	
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:54:25'!
ERROR!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:55:18' prior: 50334761 overrides: 50331977!
- aSubtrahend 

	(aSubtrahend isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator :=  numerator - (self * denominator).
		newDenominator :=  denominator.
	
		^newNumerator / newDenominator 
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].


	
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
FAILURE!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
FAILURE!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:56:40' prior: 50334923 overrides: 50331977!
- aSubtrahend 

	(aSubtrahend isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator :=  numerator - (aSubtrahend * denominator).
		newDenominator :=  denominator.
	
		^newNumerator / newDenominator 
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].


	
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

----QUIT----(24 October 2021 19:00:21) Ejercicio3Parte2.image priorSource: 42682!