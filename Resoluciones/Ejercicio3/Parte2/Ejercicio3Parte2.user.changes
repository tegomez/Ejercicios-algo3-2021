

----STARTUP---- (21 October 2021 19:41:42) as /home/thiago/Documentos/Thiago/Algoritmos y Programacion III/Ejercicios-Algo3-2021/Ejercicios-algo3-2021/Resoluciones/Ejercicio3/Ejercicio3Parte2.image!


----End fileIn of /home/thiago/Documentos/Thiago/Algoritmos y Programacion III/Ejercicios-Algo3-2021/Ejercicios-algo3-2021/Resoluciones/Ejercicio3/Numeros-Parte2-Ejercicio.st----!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 19:46:50' prior: 50332044 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		
		].
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 19:51:59' prior: 50332285 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (anAdder denominator) * (self value).
		newDenominator :=  anAdder denominator.
	
		^newNumerator / newDenominator 
		].
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 19:54:10' prior: 50332294 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((anAdder denominator) * (self value)) + anAdder numerator.
		newDenominator :=  anAdder denominator.
	
		^newNumerator / newDenominator 
		].
! !

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'tg 10/21/2021 19:54:21'!
PASSED!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 19:57:03' prior: 50332169 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^anAdder + self.
		].
		
! !

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 19:57:36'!
PASSED!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 19:58:35' prior: 50332326 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^anAdder + self.
		].
		
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:00:13' prior: 50332038 overrides: 50331968!
* aMultiplier 

	^self class with: value * aMultiplier integerValue
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:01:46' prior: 50332359 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((aMultiplier denominator) * (self value)) + aMultiplier numerator.
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].

	^self class with: value * aMultiplier integerValue
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:02:24' prior: 50332365 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((aMultiplier denominator) * (self value)) + (aMultiplier numerator).
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].

	^self class with: value * aMultiplier integerValue
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:03:32' prior: 50332382 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((aMultiplier denominator) * (self value)) * (aMultiplier numerator).
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].

	^self class with: value * aMultiplier integerValue
	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:03:56' prior: 50332400 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((aMultiplier denominator) * (self value)) * (aMultiplier numerator).
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].	! !

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:04:03'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:04:03'!
FAILURE!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:04:42' prior: 50332418 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((aMultiplier denominator) * (self value)) * aMultiplier numerator.
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].	! !

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:04:50'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:04:50'!
FAILURE!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:07:22' prior: 50332440 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((aMultiplier denominator) * (self value)) * aMultiplier numerator.
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].	! !

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:09:51'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:09:51'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:11:11'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:11:11'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:11:34'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:11:34'!
FAILURE!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:18:16' prior: 50332308 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((anAdder denominator) * (self value)) + anAdder numerator.
		newDenominator :=  anAdder denominator.
	
		^newNumerator / newDenominator 
		"^Fraccion with:(anAdder denominaror) + anAddr numerator over: anAdder denominator "
		].
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:19:34' prior: 50332498 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((anAdder denominator) * (self value)) + anAdder numerator.
		newDenominator :=  anAdder denominator.
	
		^newNumerator / newDenominator 
		"^Fraccion with:(anAdder denominaror  * self) + anAddr numerator over: anAdder denominator "
		].
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:21:43' prior: 50332462 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aMultiplier denominator * self) * aMultiplier numerator.
		newDenominator :=  aMultiplier denominator.
	
		^newNumerator / newDenominator 
		].	! !

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:21:53'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:21:53'!
FAILURE!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:23:01' prior: 50332534 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aMultiplier denominator * self) * aMultiplier numerator.
		newDenominator :=  aMultiplier denominator.
		^newNumerator / newDenominator 
		].	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:24:54' prior: 50332556 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aMultiplier denominator * self) * aMultiplier numerator.
		newDenominator := self * aMultiplier denominator.
		^newNumerator / newDenominator 
		].	! !

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:24:59'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:24:59'!
FAILURE!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:25:35' prior: 50332571 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aMultiplier denominator * self) * aMultiplier numerator.
		newDenominator := aMultiplier denominator * aMultiplier denominator.
		^newNumerator / newDenominator 
		].	! !

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:25:41'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:25:46'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 20:25:49'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:25:52'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'tg 10/21/2021 20:39:41'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'tg 10/21/2021 20:39:41'!
ERROR!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'tg 10/21/2021 20:39:41'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'tg 10/21/2021 20:39:41'!
ERROR!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:46:15' prior: 50332516 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := ((anAdder denominator) * (self value)) + anAdder numerator.
		newDenominator :=  anAdder denominator.
	
		^newNumerator / newDenominator 
		"^self * anAdder denominator + anAdder numerator / anAdder denominator".
		].
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:05:23' prior: 50332759 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
		"| newNumerator newDenominator |
		
		newNumerator := ((anAdder denominator) * (self value)) + anAdder numerator.
		newDenominator :=  anAdder denominator.
	
		^newNumerator / newDenominator 
		"
		^self * anAdder denominator + anAdder numerator / anAdder denominator.
		].
! !

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'tg 10/21/2021 21:05:30'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 21:05:33'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 21:05:35'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 21:05:37'!
PASSED!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:05:58' prior: 50332776 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [

		^self * anAdder denominator + anAdder numerator / anAdder denominator.
		].
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:07:23' prior: 50332806 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
	
		^self * anAdder denominator + anAdder numerator / anAdder denominator.
		].
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:09:28'!
mmmm: anEnteroAugend

	^anEnteroAugend * self denominator + self numerator / self denominator
		
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:10:21' prior: 50332827!
mmmm: anEnteroAugend

	^anEnteroAugend * self denominator + self numerator / self denominator.
		
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:12:30'!
beAddedTo: anEnteroAugend

	^anEnteroAugend * self denominator + self numerator / self denominator.
		
! !

!methodRemoval: Fraccion #mmmm: stamp: 'tg 10/21/2021 21:12:30'!
mmmm: anEnteroAugend

	^anEnteroAugend * self denominator + self numerator / self denominator.
		
!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:13:36' prior: 50332344 overrides: 50331973!
+ anAdder 
	"(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^anAdder + self.
		].
	"
	anAdder beAddedTo: self.
! !

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'tg 10/21/2021 21:13:45'!
PASSED!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:15:25' prior: 50332840!
beAddedTo: anAugend

	^anAugend * self denominator + self numerator / self denominator.
		
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:15:46' prior: 50332853 overrides: 50331973!
+ anAdder 
	"(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^anAdder + self.
		].
	"
	anAdder beAddedTo: self.
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:16:09'!
beAddedToAnEntero: anAugend

	^anAugend * self denominator + self numerator / self denominator.
		
! !

!methodRemoval: Fraccion #beAddedTo: stamp: 'tg 10/21/2021 21:16:14'!
beAddedTo: anAugend

	^anAugend * self denominator + self numerator / self denominator.
		
!
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:17:22'!
beAddedToAnEntero: anAugend
	
	^Entero with: anAugend integerValue + self integerValue.
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:17:44' prior: 50332817 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Entero) ifTrue: [
		^self class with: value + anAdder integerValue.
		].
 	(anAdder isKindOf: Fraccion) ifTrue: [
	
		^self * anAdder denominator + anAdder numerator / anAdder denominator.
		].
	^anAdder beAddedToAnEntero: self.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:17:49' prior: 50332910 overrides: 50331973!
+ anAdder 

	^anAdder beAddedToAnEntero: self.! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:18:04' prior: 50332878 overrides: 50331973!
+ anAdder 
	"(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^anAdder + self.
		].
	"
	anAdder beAddedToAnEntero: self.
! !

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'tg 10/21/2021 21:18:20'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 21:18:22'!
ERROR!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 21:18:22'!
ERROR!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:19:11' prior: 50332928 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^anAdder + self.
		].
! !

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'tg 10/21/2021 21:19:24'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'tg 10/21/2021 21:19:26'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'tg 10/21/2021 21:24:19'!
PASSED!

----QUIT----(21 October 2021 21:25:58) Ejercicio3Parte2.image priorSource: 325!

----STARTUP---- (21 October 2021 21:28:12) as /home/thiago/Documentos/Thiago/Algoritmos y Programacion III/Ejercicios-Algo3-2021/Ejercicios-algo3-2021/Resoluciones/Ejercicio3/Ejercicio3Parte2.image!


----QUIT----(21 October 2021 21:28:38) Ejercicio3Parte2.image priorSource: 42400!

----STARTUP---- (22 October 2021 00:30:36) as /home/tin-gprieto/Documentos/facultad/trabajos_practicos/algo3/repo/Resoluciones/Ejercicio3/Parte2/Ejercicio3Parte2.image!


!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/22/2021 00:31:02'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/22/2021 00:31:08'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/22/2021 00:31:09'!
PASSED!

----STARTUP---- (24 October 2021 17:35:29) as /home/tin-gprieto/Documentos/facultad/trabajos_practicos/algo3/repo/Resoluciones/Ejercicio3/Parte2/Ejercicio3Parte2.image!


!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 17:35:46'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 17:35:46'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 17:35:46'!
ERROR!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:00:06'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:00:06'!
ERROR!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:00:06'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:00:06'!
ERROR!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:14:58' prior: 50332162 overrides: 50331968!
* aMultiplier
 
	(aMultiplier isKindOf: Fraccion) ifTrue: [
		^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)
		].
	(aMultiplier isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aMultiplier).
		newDenominator := denominator.
	
		^newNumerator / newDenominator 
		].
	

	
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:15:32' prior: 50333268 overrides: 50331968!
* aMultiplier
 
	(aMultiplier isKindOf: Fraccion) ifTrue: [
		^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)
		].
	(aMultiplier isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aMultiplier integerValue).
		newDenominator := denominator.
	
		^newNumerator / newDenominator 
		].
	

	
	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
FAILURE!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:15:43'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:15:43'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:15:43'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:15:43'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:15:43'!
FAILURE!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:15:43'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:15:43'!
FAILURE!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
FAILURE!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:16:23'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:16:23'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:16:23'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:16:23'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:16:23'!
FAILURE!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:16:23'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:16:23'!
FAILURE!
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:21:53' prior: 50332056 overrides: 50331982!
/ aDivisor 
	(aDivisor isKindOf: Entero) ifTrue: [
		^Fraccion with: self over: aDivisor
		].
 	(aDivisor isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aDivisor denominator * self).
		newDenominator := aDivisor numerator.
		^newNumerator / newDenominator 
		].	
	! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:22:17' prior: 50333283 overrides: 50331968!
* aMultiplier
 
	(aMultiplier isKindOf: Fraccion) ifTrue: [
		^(numerator * aMultiplier numerator) / (denominator * aMultiplier denominator)
		].
	(aMultiplier isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aMultiplier).
		newDenominator := denominator.
	
		^newNumerator / newDenominator 
		].
	

	
	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:22:24'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:22:24'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:22:24'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:22:24'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:22:24'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:35:46'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:35:46'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:35:46'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:35:46'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:35:46'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:36:17'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:36:17'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:36:17'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:36:17'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:36:17'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:36:17'!
PASSED!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:39:12' prior: 50332191 overrides: 50331982!
/ aDivisor 

	(aDivisor isKindOf: Fraccion) ifTrue: [
		^(numerator * aDivisor denominator) / (denominator * aDivisor numerator)
		].
 	(aDivisor isKindOf: Entero ) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := numerator.
		newDenominator := (denominator * aDivisor).
		^newNumerator / newDenominator 
		].		
	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:39:15'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:39:15'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:39:15'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:39:15'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:41:35'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:41:35'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:41:35'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:41:35'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:41:35'!
PASSED!
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:49:54' prior: 50332050 overrides: 50331977!
- aSubtrahend 

	(aSubtrahend isKindOf: Entero) ifTrue: [
		^ self class with: value - aSubtrahend integerValue.
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (self * aSubtrahend denominator) - (aSubtrahend numerator).
		newDenominator := aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].

	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:49:56'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:49:56'!
ERROR!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:50:10'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:10'!
ERROR!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:50:51'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:50:51'!
ERROR!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:54:20' prior: 50332180 overrides: 50331977!
- aSubtrahend 
	(aSubtrahend isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (aSubtrahend numerator) - (self * aSubtrahend denominator).
		newDenominator := aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].


	
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:54:22' prior: 50334740 overrides: 50331977!
- aSubtrahend 

	(aSubtrahend isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (aSubtrahend numerator) - (self * aSubtrahend denominator).
		newDenominator := aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].


	
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:54:24'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:54:24'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:54:25'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:54:25'!
ERROR!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:55:18' prior: 50334761 overrides: 50331977!
- aSubtrahend 

	(aSubtrahend isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator :=  numerator - (self * denominator).
		newDenominator :=  denominator.
	
		^newNumerator / newDenominator 
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].


	
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
FAILURE!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:55:23'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:55:23'!
FAILURE!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:56:40' prior: 50334923 overrides: 50331977!
- aSubtrahend 

	(aSubtrahend isKindOf: Entero) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator :=  numerator - (aSubtrahend * denominator).
		newDenominator :=  denominator.
	
		^newNumerator / newDenominator 
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].


	
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:56:42'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:56:46'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 18:56:54'!
PASSED!

----QUIT----(24 October 2021 19:00:21) Ejercicio3Parte2.image priorSource: 42682!

----STARTUP---- (24 October 2021 19:59:14) as /home/tin-gprieto/Documentos/facultad/trabajos_practicos/algo3/repo/Resoluciones/Ejercicio3/Parte2/Ejercicio3Parte2.image!


!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 19:59:40'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:00:21'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:00:21'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:04:56' prior: 50332892!
beAddedToAnEntero: anAugend
	
	|newDenominator newNumerator|
	
	newNumerator  := anAugend * self denominator + self numerator.
	newDenominator := self denominator.
	
	^Fraccion with:  newNumerator over: newDenominator.
		
! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:05:48'!
mmmm! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:05:58'!
mmmm! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:07:14'!
mmmm: anAdder

		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		! !

!methodRemoval: Fraccion #mmmm stamp: 'MG 10/24/2021 20:07:17'!
mmmm!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:07:57'!
mmmm: anAdder

	^anAdder + self.! !

!methodRemoval: Entero #mmmm stamp: 'MG 10/24/2021 20:08:03'!
mmmm!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:08:49' prior: 50332953 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		].
	(anAdder isKindOf: Entero) ifTrue: [
		
		].
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:10:04' prior: 50335835 overrides: 50331973!
+ anAdder 

	anAdder mmmm: self.
! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:10:13' prior: 50335828!
mmmm: anAdder

	^self + anAdder.! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:10:32'!
FAILURE!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:10:32'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:10:32'!
FAILURE!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:10:32'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:10:32'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:11:54' prior: 50335815!
mmmm: anAdder

		| newNumerator newDenominator |
	
		newNumerator := (self numerator * anAdder denominator) + (self denominator * anAdder numerator).
		newDenominator := self denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:11:57'!
FAILURE!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:11:57'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:11:57'!
FAILURE!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:11:57'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:11:57'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:19:02'!
beAddedToAFraccion: anAdder

		| newNumerator newDenominator |
	
		newNumerator := (self numerator * anAdder denominator) + (self denominator * anAdder numerator).
		newDenominator := self denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:19:02'!
beAddedToAFraccion: anAdder

	^self + anAdder.! !
!Fraccion methodsFor: 'as yet unclassified' stamp: 'MG 10/24/2021 20:19:02' prior: 50335842 overrides: 50331973!
+ anAdder 

	anAdder beAddedToAFraccion: self.
! !

!methodRemoval: Fraccion #mmmm: stamp: 'MG 10/24/2021 20:19:02'!
mmmm: anAdder

		| newNumerator newDenominator |
	
		newNumerator := (self numerator * anAdder denominator) + (self denominator * anAdder numerator).
		newDenominator := self denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		!

!methodRemoval: Entero #mmmm: stamp: 'MG 10/24/2021 20:19:02'!
mmmm: anAdder

	^self + anAdder.!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:20:58' prior: 50336138!
beAddedToAFraccion: anAdder

		| newNumerator newDenominator |
	
		newNumerator := (self numerator * anAdder denominator) + (self denominator * anAdder numerator).
		newDenominator := self denominator * anAdder denominator.
	
		^Fraccion with: newNumerator over: newDenominator. 
		! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:21:16'!
FAILURE!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:21:16'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:21:16'!
FAILURE!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:21:16'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:21:25'!
FAILURE!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:23:05' prior: 50336149!
beAddedToAFraccion: aFraccion

	^self + aFraccion.! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:24:11'!
FAILURE!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:24:11'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:24:11'!
FAILURE!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:24:11'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:24:13'!
FAILURE!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:26:27' prior: 50335799!
beAddedToAnEntero: anAugend
	
	|newDenominator newNumerator|
	
	newNumerator  := (anAugend * self denominator) + self numerator.
	newDenominator := self denominator.
	
	^Fraccion with:  newNumerator over: newDenominator.
		
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:26:31'!
FAILURE!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:26:31'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:26:31'!
FAILURE!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:26:31'!
PASSED!

----QUIT----(24 October 2021 20:28:52) Ejercicio3Parte2.image priorSource: 123656!

----STARTUP---- (24 October 2021 20:28:58) as /home/tin-gprieto/Documentos/facultad/trabajos_practicos/algo3/repo/Resoluciones/Ejercicio3/Parte2/Ejercicio3Parte2.image!


!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:29:16'!
FAILURE!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:29:16'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:29:16'!
FAILURE!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:29:16'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:29:23'!
FAILURE!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:29:42'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:29:50'!
FAILURE!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:31:53'!
PASSED!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 21:19:11' prior: 50336155 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^anAdder + self.
		].
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:34:33'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:34:33'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:35:07' prior: 50336173!
beAddedToAFraccion: anAdder

		| newNumerator newDenominator |
	
		newNumerator := (anAdder numerator * self denominator) + (self denominator * anAdder numerator).
		newDenominator := self denominator * anAdder denominator.
	
		^Fraccion with: newNumerator over: newDenominator. 
		! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:35:14' prior: 50336931!
beAddedToAFraccion: anAdder

		| newNumerator newDenominator |
	
		newNumerator := (anAdder numerator * self denominator) + (anAdder denominator * self numerator).
		newDenominator := self denominator * anAdder denominator.
	
		^Fraccion with: newNumerator over: newDenominator. 
		! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:35:22' prior: 50336944!
beAddedToAFraccion: anAdder

		| newNumerator newDenominator |
	
		newNumerator := (anAdder numerator * self denominator) + (anAdder denominator * self numerator).
		newDenominator := anAdder denominator * self denominator.
	
		^Fraccion with: newNumerator over: newDenominator. 
		! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:39:29' prior: 50336779 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		^self beAddedToAnEntero: anAdder.
		].
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:39:50'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:40:45'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:40:45'!
PASSED!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:41:27' prior: 50336970 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		anAdder beAddedToAFraccion: self.
		].
! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:41:46' prior: 50336326!
beAddedToAFraccion: aFraccion

	^aFraccion beAddedToAnEntero: self.! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:42:09' prior: 50337260 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (self numerator * anAdder denominator) + (self denominator * anAdder numerator).
		newDenominator := self denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		anAdder beAddedToAFraccion: self.
		].
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:42:13' prior: 50337281 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		
		].
	(anAdder isKindOf: Entero) ifTrue: [
		anAdder beAddedToAFraccion: self.
		].
! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:42:23' prior: 50336957!
beAddedToAFraccion: anAdder

		| newNumerator newDenominator |
	
		newNumerator := (self numerator * anAdder denominator) + (self denominator * anAdder numerator).
		newDenominator := self denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:42:47' prior: 50337297 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		anAdder beAddedToAFraccion: self.
		].
	(anAdder isKindOf: Entero) ifTrue: [
		anAdder beAddedToAFraccion: self.
		].
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:42:59' prior: 50337317 overrides: 50331973!
+ anAdder 
	anAdder beAddedToAFraccion: self.
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:43:02'!
FAILURE!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:43:02'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:43:02'!
FAILURE!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:43:02'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:43:26'!
FAILURE!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:42:13' prior: 50337327 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		
		].
	(anAdder isKindOf: Entero) ifTrue: [
		anAdder beAddedToAFraccion: self.
		].
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:42:13' prior: 50337473 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		
		].
	(anAdder isKindOf: Entero) ifTrue: [
		anAdder beAddedToAFraccion: self.
		].
! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:41:27' prior: 50337482 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		anAdder beAddedToAFraccion: self.
		].
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:46:02'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:46:02'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:46:02'!
FAILURE!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:47:36' prior: 50336472!
beAddedToAnEntero: anAugend
	
	|newDenominator newNumerator|
	
	newNumerator  := anAugend * self denominator + self numerator.
	newDenominator := self denominator.
	
	^Fraccion with:  newNumerator over: newDenominator.
		
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:47:39'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:47:39'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:47:39'!
FAILURE!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:47:49' prior: 50337646!
beAddedToAnEntero: anAugend
	
	|newDenominator newNumerator|
	
	newNumerator  := (anAugend * self denominator) + self numerator.
	newDenominator := self denominator.
	
	^Fraccion with:  newNumerator over: newDenominator.
		
! !

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:48:17'!
PASSED!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:49:09' prior: 50337491 overrides: 50331973!
+ anAdder 
	(anAdder isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * anAdder denominator) + (denominator * anAdder numerator).
		newDenominator := denominator * anAdder denominator.
	
		^newNumerator / newDenominator 
		].
	(anAdder isKindOf: Entero) ifTrue: [
		self beAddedToAnEntero: anAdder.
		].
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:49:12'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:49:12'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:49:12'!
FAILURE!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:49:23'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:49:23'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:49:23'!
FAILURE!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:54:43' prior: 50337811 overrides: 50331973!
+ anAdder 
	^anAdder beAddedToAFraccion: self .

! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 20:54:46'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 20:54:46'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:55:48' prior: 50337305!
beAddedToAFraccion: anAdder

		| newNumerator newDenominator |
	
		newNumerator := (self numerator * anAdder denominator) + (self denominator * anAdder numerator).
		newDenominator := self denominator * anAdder denominator.
	
		^Fraccion with: newNumerator over: newDenominator.
		! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:57:00'!
mmmm: aMultiplier! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:57:26'!
mmmm: aMultiplier! !
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 20:58:50' prior: 50332593 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		 ^aMultiplier mmmm: self.
		].	! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 20:59:58' prior: 50338266!
mmmm: anEntero

	| newNumerator newDenominator |
		
	newNumerator := (self denominator * anEntero) * self numerator.
	newDenominator := self denominator * self denominator.
	
	^Fraccion with: newNumerator over: newDenominator. ! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:00:37'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:00:37'!
PASSED!
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:01:04' prior: 50338271 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		 ^aMultiplier mmmm: self.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		 ^aMultiplier mmmm: self.
		].	! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:01:20' prior: 50338262!
mmmm: aMultiplier

	^self class with: value * aMultiplier 		integerValue.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:02:44' prior: 50338439!
mmmm: aMultiplier

	^Entero with: aMultiplier 		integerValue * self value.! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:03:03'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:03:03'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:03:03'!
ERROR!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:03:03'!
ERROR!
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:03:34' prior: 50338430 overrides: 50331968!
* aMultiplier 
	^aMultiplier mmmm: self.
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:03:39'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:03:39'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:03:39'!
ERROR!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:03:39'!
ERROR!
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:04:12' prior: 50338588 overrides: 50331968!
* aMultiplier 
	^aMultiplier mmmm: self.
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'tg 10/21/2021 20:25:35' prior: 50338730 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^self class with: value * aMultiplier 		integerValue.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aMultiplier denominator * self) * aMultiplier numerator.
		newDenominator := aMultiplier denominator * aMultiplier denominator.
		^newNumerator / newDenominator 
		].	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:05:43' prior: 50338735 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^aMultiplier mmmm: self.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aMultiplier denominator * self) * aMultiplier numerator.
		newDenominator := aMultiplier denominator * aMultiplier denominator.
		^newNumerator / newDenominator 
		].	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:05:55'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:05:55'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:05:55'!
ERROR!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:05:58'!
ERROR!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:06:31' prior: 50338445!
mmmm: aMultiplier

	^Entero with: aMultiplier 		integerValue * (self value).! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:06:34'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:06:34'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:06:34'!
ERROR!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:06:34'!
ERROR!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:06:49' prior: 50338906!
mmmm: aMultiplier

	^Entero with: (aMultiplier 		integerValue) * self value.! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:06:54'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:06:54'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:06:54'!
ERROR!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:06:54'!
ERROR!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:07:03' prior: 50339049!
mmmm: aMultiplier

	^Entero with: aMultiplier 		integerValue * self value.! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:07:06'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:07:06'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:07:06'!
ERROR!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:07:09'!
ERROR!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:08:22' prior: 50339192!
mmmm: aMultiplier

	^Entero with:  self value * aMultiplier 		integerValue.! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:08:23'!
FAILURE!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:08:23'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:08:23'!
ERROR!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:08:23'!
ERROR!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:08:35' prior: 50339338!
mmmm: aMultiplier

	^Entero with:  value * aMultiplier 		integerValue.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:08:37' prior: 50339481!
mmmm: aMultiplier

	^Entero with: value * aMultiplier 		integerValue.! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:08:39'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:08:39'!
PASSED!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:09:18' prior: 50339487!
mmmm: aMultiplier

	^Entero with: aMultiplier 		integerValue * self integerValue.! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:09:20'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:09:20'!
PASSED!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:10:10'!
beMultipliedToAnEntero: aMultiplier

	^Entero with: aMultiplier 		integerValue * self integerValue.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:10:10'!
beMultipliedToAnEntero: anEntero

	| newNumerator newDenominator |
		
	newNumerator := (self denominator * anEntero) * self numerator.
	newDenominator := self denominator * self denominator.
	
	^Fraccion with: newNumerator over: newDenominator. ! !
!Entero methodsFor: 'as yet unclassified' stamp: 'MG 10/24/2021 21:10:10' prior: 50338751 overrides: 50331968!
* aMultiplier 
	(aMultiplier isKindOf: Entero) ifTrue: [
		^aMultiplier beMultipliedToAnEntero: self.
		].
 	(aMultiplier isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aMultiplier denominator * self) * aMultiplier numerator.
		newDenominator := aMultiplier denominator * aMultiplier denominator.
		^newNumerator / newDenominator 
		].	! !

!methodRemoval: Entero #mmmm: stamp: 'MG 10/24/2021 21:10:10'!
mmmm: aMultiplier

	^Entero with: aMultiplier 		integerValue * self integerValue.!

!methodRemoval: Fraccion #mmmm: stamp: 'MG 10/24/2021 21:10:10'!
mmmm: anEntero

	| newNumerator newDenominator |
		
	newNumerator := (self denominator * anEntero) * self numerator.
	newDenominator := self denominator * self denominator.
	
	^Fraccion with: newNumerator over: newDenominator. !
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:10:26' prior: 50339791 overrides: 50331968!
* aMultiplier 

		^aMultiplier beMultipliedToAnEntero: self.
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:10:32'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:10:32'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:10:32'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:10:32'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:10:32'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:10:32'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:10:33'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:10:33'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:12:47'!
mmmm: aMultiplier! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:13:05'!
mmmm: aMultiplier! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:14:37' prior: 50339964!
mmmm: aMultiplier

	|newDenominator newNumerator|
	
	newNumerator := numerator * aMultiplier numerator.
	newDenominator  := denominator * aMultiplier denominator.
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:14:55' prior: 50339972!
mmmm: aMultiplier

	|newDenominator newNumerator|
	
	newNumerator := self numerator * aMultiplier numerator.
	newDenominator  := self denominator * aMultiplier denominator.
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:15:41' prior: 50339968!
mmmm: aMultiplier

	| newNumerator newDenominator |
	
	newNumerator := (aMultiplier numerator * self).
	newDenominator := aMultiplier denominator.
	
	^newNumerator / newDenominator ! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:15:45' prior: 50339994!
mmmm: aMultiplier

	| newNumerator newDenominator |
	
	newNumerator := aMultiplier numerator * self.
	newDenominator := aMultiplier denominator.
	
	^newNumerator / newDenominator ! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:16:14' prior: 50340003!
mmmm: aMultiplier

	| newNumerator newDenominator |
	
	newNumerator := aMultiplier numerator * self.
	newDenominator := aMultiplier denominator.
	
	^Fraccion with: newNumerator over: newDenominator. ! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:17:48' prior: 50333587 overrides: 50331968!
* aMultiplier
 	^aMultiplier mmmm: self.
	

	
	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:17:52'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:17:52'!
PASSED!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:18:46' prior: 50340012!
mmmm: aMultiplier

	^ self * aMultiplier.! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:18:51'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:18:51'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:19:21'!
beMultipliedToAFraccion: aMultiplier

	|newDenominator newNumerator|
	
	newNumerator := self numerator * aMultiplier numerator.
	newDenominator  := self denominator * aMultiplier denominator.
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:19:21'!
beMultipliedToAFraccion: aMultiplier

	^ self * aMultiplier.! !
!Fraccion methodsFor: 'as yet unclassified' stamp: 'MG 10/24/2021 21:19:21' prior: 50340022 overrides: 50331968!
* aMultiplier
 	^aMultiplier beMultipliedToAFraccion: self.
	

	
	! !

!methodRemoval: Fraccion #mmmm: stamp: 'MG 10/24/2021 21:19:21'!
mmmm: aMultiplier

	|newDenominator newNumerator|
	
	newNumerator := self numerator * aMultiplier numerator.
	newDenominator  := self denominator * aMultiplier denominator.
	
	^Fraccion with: newNumerator over: newDenominator.!

!methodRemoval: Entero #mmmm: stamp: 'MG 10/24/2021 21:19:21'!
mmmm: aMultiplier

	^ self * aMultiplier.!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:19:33' prior: 50340324 overrides: 50331968!
* aMultiplier

 	^aMultiplier beMultipliedToAFraccion: self.
	

	
	! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:20:19' prior: 50337275!
beAddedToAFraccion: aFraccion

	^self + aFraccion.! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:20:21'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:20:21'!
PASSED!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:20:24' prior: 50340349!
beAddedToAFraccion: aFraccion

	^ self + aFraccion.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:21:11'!
mmmm: aDivisor! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:21:50' prior: 50340497!
mmmm: aDivisor
	^Fraccion with: aDivisor over: aDivisor.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:21:53' prior: 50340501!
mmmm: aDivisor
	^Fraccion with: aDivisor over: self.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:22:19' prior: 50333573 overrides: 50331982!
/ aDivisor 
	(aDivisor isKindOf: Entero) ifTrue: [
		aDivisor mmmm: self.
		].
 	(aDivisor isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aDivisor denominator * self).
		newDenominator := aDivisor numerator.
		^newNumerator / newDenominator 
		].	
	! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:22:39' prior: 50340507!
mmmm: aDivisor

	^Fraccion with: aDivisor over: self.! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:22:43'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:22:43'!
FAILURE!
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:22:53' prior: 50340513 overrides: 50331982!
/ aDivisor 
	(aDivisor isKindOf: Entero) ifTrue: [
		^aDivisor mmmm: self.
		].
 	(aDivisor isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
		
		newNumerator := (aDivisor denominator * self).
		newDenominator := aDivisor numerator.
		^newNumerator / newDenominator 
		].	
	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:22:57'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:22:57'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:23:19'!
mmmm: aDivisor! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:23:50' prior: 50340820!
mmmm: aDividend! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:23:57' prior: 50340526!
mmmm: aDividend

	^Fraccion with: aDividend over: self.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:25:17' prior: 50340824!
mmmm: aDividend

	| newNumerator newDenominator |
		
	newNumerator := (self denominator * aDividend).
	newDenominator := self numerator.
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:25:27' prior: 50340670 overrides: 50331982!
/ aDivisor 

		^aDivisor mmmm: self.
! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:25:31'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:25:31'!
PASSED!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:26:28'!
beDividedToAnEntero: aDividend

	^Fraccion with: aDividend over: self.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:26:28'!
beDividedToAnEntero: aDividend

	| newNumerator newDenominator |
		
	newNumerator := (self denominator * aDividend).
	newDenominator := self numerator.
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Entero methodsFor: 'as yet unclassified' stamp: 'MG 10/24/2021 21:26:28' prior: 50340844 overrides: 50331982!
/ aDivisor 

		^aDivisor beDividedToAnEntero: self.
! !

!methodRemoval: Entero #mmmm: stamp: 'MG 10/24/2021 21:26:28'!
mmmm: aDividend

	^Fraccion with: aDividend over: self.!

!methodRemoval: Fraccion #mmmm: stamp: 'MG 10/24/2021 21:26:28'!
mmmm: aDividend

	| newNumerator newDenominator |
		
	newNumerator := (self denominator * aDividend).
	newDenominator := self numerator.
	
	^Fraccion with: newNumerator over: newDenominator.!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:29:11'!
mmmm: aDividend! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:29:21' prior: 50341019!
mmmm: aDividend! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:30:23' prior: 50341023!
mmmm: aDividend
	| newNumerator newDenominator |
		
	newNumerator := aDividend numerator.
	newDenominator := (aDividend denominator * self).
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:30:26' prior: 50341027!
mmmm: aDividend

	| newNumerator newDenominator |
		
	newNumerator := aDividend numerator.
	newDenominator := (aDividend denominator * self).
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:30:54' prior: 50334014 overrides: 50331982!
/ aDivisor 

	(aDivisor isKindOf: Fraccion) ifTrue: [
		^(numerator * aDivisor denominator) / (denominator * aDivisor numerator)
		].
 	(aDivisor isKindOf: Entero ) ifTrue: [
		^aDivisor mmmm: self.
		].		
	! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:34:05'!
mmmm: aDividend

	|newNumerator newDenominator|

	newNumerator := ( aDividend numerator *  self denominator).
	newDenominator := (aDividend denominator * self numerator).

	^ Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:34:15' prior: 50341047 overrides: 50331982!
/ aDivisor 
	
	^aDivisor mmmm: self.
		
	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:34:19'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:34:19'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:34:52'!
beDividedToAFraccion: aDividend

	|newNumerator newDenominator|

	newNumerator := ( aDividend numerator *  self denominator).
	newDenominator := (aDividend denominator * self numerator).

	^ Fraccion with: newNumerator over: newDenominator.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:34:52'!
beDividedToAFraccion: aDividend

	| newNumerator newDenominator |
		
	newNumerator := aDividend numerator.
	newDenominator := (aDividend denominator * self).
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'as yet unclassified' stamp: 'MG 10/24/2021 21:34:52' prior: 50341068 overrides: 50331982!
/ aDivisor 
	
	^aDivisor beDividedToAFraccion: self.
		
	! !

!methodRemoval: Fraccion #mmmm: stamp: 'MG 10/24/2021 21:34:52'!
mmmm: aDividend

	|newNumerator newDenominator|

	newNumerator := ( aDividend numerator *  self denominator).
	newDenominator := (aDividend denominator * self numerator).

	^ Fraccion with: newNumerator over: newDenominator.!

!methodRemoval: Entero #mmmm: stamp: 'MG 10/24/2021 21:34:52'!
mmmm: aDividend

	| newNumerator newDenominator |
		
	newNumerator := aDividend numerator.
	newDenominator := (aDividend denominator * self).
	
	^Fraccion with: newNumerator over: newDenominator.!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:38:38'!
mmmm: aMinuend! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:38:48'!
mmmm: aMinuend! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:39:28' prior: 50341254!
mmmm: aMinuend
	^ Entero with: aMinuend - self integerValue.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:39:45' prior: 50334303 overrides: 50331977!
- aSubtrahend 

	(aSubtrahend isKindOf: Entero) ifTrue: [
		^ aSubtrahend mmmm: self.
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (self * aSubtrahend denominator) - (aSubtrahend numerator).
		newDenominator := aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].

	! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:39:56' prior: 50341262!
mmmm: aMinuend

	^ Entero with: aMinuend - self integerValue.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:41:20' prior: 50341258!
mmmm: aMinuend
	| newNumerator newDenominator |
	
	newNumerator := (aMinuend * self denominator) - (self numerator).
	newDenominator := self denominator.
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:41:23' prior: 50341288!
mmmm: aMinuend

	| newNumerator newDenominator |
	
	newNumerator := (aMinuend * self denominator) - (self numerator).
	newDenominator := self denominator.
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:41:29' prior: 50341268 overrides: 50331977!
- aSubtrahend 
	
	^ aSubtrahend mmmm: self.


	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:41:35'!
ERROR!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:41:35'!
ERROR!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:41:35'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:41:35'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:41:35'!
ERROR!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:41:35'!
ERROR!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:41:35'!
ERROR!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:41:35'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:41:35'!
ERROR!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:41:35'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:41:35'!
PASSED!
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 18:49:54' prior: 50341309 overrides: 50331977!
- aSubtrahend 

	(aSubtrahend isKindOf: Entero) ifTrue: [
		^ self class with: value - aSubtrahend integerValue.
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (self * aSubtrahend denominator) - (aSubtrahend numerator).
		newDenominator := aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].

	! !
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:43:44' prior: 50341452 overrides: 50331977!
- aSubtrahend 

	(aSubtrahend isKindOf: Entero) ifTrue: [
		^ aSubtrahend mmmm: self.
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (self * aSubtrahend denominator) - (aSubtrahend numerator).
		newDenominator := aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].

	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:43:49'!
ERROR!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:43:49'!
ERROR!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:43:49'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:43:49'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:43:49'!
ERROR!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:43:49'!
ERROR!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:43:49'!
ERROR!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:43:49'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:43:49'!
ERROR!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:43:49'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:44:00'!
ERROR!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:44:00'!
ERROR!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:44:00'!
ERROR!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:44:00'!
ERROR!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:44:00'!
ERROR!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:44:00'!
ERROR!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:44:00'!
ERROR!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:44:00'!
ERROR!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:44:00'!
ERROR!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:44:00'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:44:35'!
ERROR!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:45:03' prior: 50341282!
mmmm: aMinuend

	^ Entero with: aMinuend integerValue - self integerValue.! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:45:09'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:45:11'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:45:11'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:45:23' prior: 50341298!
mmmm: aMinuend

	| newNumerator newDenominator |
	
	newNumerator := (aMinuend * self denominator) - (self numerator).
	newDenominator := self denominator.
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:45:53' prior: 50341468 overrides: 50331977!
- aSubtrahend 
	
	^ aSubtrahend mmmm: self.

	! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:46:01'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:46:01'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:46:52'!
beSubtrahedToAnEntero: aMinuend

	| newNumerator newDenominator |
	
	newNumerator := (aMinuend * self denominator) - (self numerator).
	newDenominator := self denominator.
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:46:52'!
beSubtrahedToAnEntero: aMinuend

	^ Entero with: aMinuend integerValue - self integerValue.! !
!Entero methodsFor: 'as yet unclassified' stamp: 'MG 10/24/2021 21:46:52' prior: 50342052 overrides: 50331977!
- aSubtrahend 
	
	^ aSubtrahend beSubtrahedToAnEntero: self.

	! !

!methodRemoval: Fraccion #mmmm: stamp: 'MG 10/24/2021 21:46:52'!
mmmm: aMinuend

	| newNumerator newDenominator |
	
	newNumerator := (aMinuend * self denominator) - (self numerator).
	newDenominator := self denominator.
	
	^Fraccion with: newNumerator over: newDenominator.!

!methodRemoval: Entero #mmmm: stamp: 'MG 10/24/2021 21:46:52'!
mmmm: aMinuend

	^ Entero with: aMinuend integerValue - self integerValue.!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:48:26'!
mmmm: aMinuend! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:48:51'!
mmmm: aMinuend! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:49:49' prior: 50335084 overrides: 50331977!
- aSubtrahend 

	(aSubtrahend isKindOf: Entero) ifTrue: [
		^aSubtrahend mmmm: self.
		].
	(aSubtrahend isKindOf: Fraccion) ifTrue: [
		| newNumerator newDenominator |
	
		newNumerator := (numerator * aSubtrahend denominator) - (denominator * aSubtrahend numerator).
		newDenominator := denominator * aSubtrahend denominator.
	
		^newNumerator / newDenominator 
		].


	
! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:50:34' prior: 50342229!
mmmm: aMinuend

	| newNumerator newDenominator |
	
	newNumerator :=  aMinuend numerator - (self * aMinuend denominator).
	newDenominator :=  aMinuend denominator.
	
	^Fraccion with:  newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 21:50:44' prior: 50342238 overrides: 50331977!
- aSubtrahend 

	^aSubtrahend mmmm: self.


	
! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:51:27' prior: 50342233!
mmmm: aMinuend

	| newNumerator newDenominator |
	
		newNumerator := (aMinuend numerator * self denominator) - (aMinuend denominator * self numerator).
		newDenominator := aMinuend denominator * self denominator.
	
		^newNumerator / newDenominator ! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:52:17' prior: 50342269!
mmmm: aMinuend

	| newNumerator newDenominator |
	
	newNumerator := (aMinuend numerator * self denominator) - (aMinuend denominator * self numerator).
	newDenominator := aMinuend denominator * self denominator.
	
	^Fraccion with:  newNumerator over: newDenominator. ! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:52:22'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:52:22'!
PASSED!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:52:49'!
beSubtrahedToAFraccion: aMinuend

	| newNumerator newDenominator |
	
	newNumerator :=  aMinuend numerator - (self * aMinuend denominator).
	newDenominator :=  aMinuend denominator.
	
	^Fraccion with:  newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:52:49'!
beSubtrahedToAFraccion: aMinuend

	| newNumerator newDenominator |
	
	newNumerator := (aMinuend numerator * self denominator) - (aMinuend denominator * self numerator).
	newDenominator := aMinuend denominator * self denominator.
	
	^Fraccion with:  newNumerator over: newDenominator. ! !
!Fraccion methodsFor: 'as yet unclassified' stamp: 'MG 10/24/2021 21:52:49' prior: 50342264 overrides: 50331977!
- aSubtrahend 

	^aSubtrahend beSubtrahedToAFraccion: self.


	
! !

!methodRemoval: Entero #mmmm: stamp: 'MG 10/24/2021 21:52:49'!
mmmm: aMinuend

	| newNumerator newDenominator |
	
	newNumerator :=  aMinuend numerator - (self * aMinuend denominator).
	newDenominator :=  aMinuend denominator.
	
	^Fraccion with:  newNumerator over: newDenominator.!

!methodRemoval: Fraccion #mmmm: stamp: 'MG 10/24/2021 21:52:49'!
mmmm: aMinuend

	| newNumerator newDenominator |
	
	newNumerator := (aMinuend numerator * self denominator) - (aMinuend denominator * self numerator).
	newDenominator := aMinuend denominator * self denominator.
	
	^Fraccion with:  newNumerator over: newDenominator. !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:53:17' prior: 50340492!
beAddedToAFraccion: anAugend

	^ self + anAugend.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:53:34' prior: 50342479!
beAddedToAFraccion: anAddend

	^ self + anAddend.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:54:19' prior: 50339773!
beMultipliedToAnEntero: aMultiplicand

	^Entero with: aMultiplicand 		integerValue * self integerValue.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:55:00' prior: 50338250!
beAddedToAFraccion: anAddend

		| newNumerator newDenominator |
	
		newNumerator := (self numerator * anAddend denominator) + (self denominator * anAddend numerator).
		newDenominator := self denominator * anAddend denominator.
	
		^Fraccion with: newNumerator over: newDenominator.
		! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:55:23' prior: 50340307!
beMultipliedToAFraccion: aMultiplicand

	|newDenominator newNumerator|
	
	newNumerator := self numerator * aMultiplicand numerator.
	newDenominator  := self denominator * aMultiplicand denominator.
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:55:36' prior: 50342509!
beMultipliedToAFraccion: aMultiplier

	|newDenominator newNumerator|
	
	newNumerator := self numerator * aMultiplier numerator.
	newDenominator  := self denominator * aMultiplier denominator.
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:56:23' prior: 50339779!
beMultipliedToAnEntero: aMultiplicand
	
	^aMultiplicand * self. ! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:56:28'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:56:28'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:56:28'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:56:28'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:56:28'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:56:28'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:56:28'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:56:28'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:56:28'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:56:28'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:56:28'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:56:28'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:10:10' prior: 50342533!
beMultipliedToAnEntero: anEntero

	| newNumerator newDenominator |
		
	newNumerator := (self denominator * anEntero) * self numerator.
	newDenominator := self denominator * self denominator.
	
	^Fraccion with: newNumerator over: newDenominator. ! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:56:49'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:56:49'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:57:33' prior: 50342578!
beMultipliedToAnEntero: aMultiplicand

	| newNumerator newDenominator |
		
	newNumerator := (self denominator * aMultiplicand) * self numerator.
	newDenominator := self denominator * self denominator.
	
	^Fraccion with: newNumerator over: newDenominator. ! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 21:58:39' prior: 50342521!
beMultipliedToAFraccion: aMultiplicand

	|newDenominator newNumerator|
	
	newNumerator := aMultiplicand numerator *  self numerator.
	newDenominator  := aMultiplicand denominator * self denominator .
	
	^Fraccion with: newNumerator over: newDenominator.! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 21:58:48'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 21:58:48'!
PASSED!
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 22:00:42' prior: 50340318!
beMultipliedToAFraccion: aMultiplicand

	^ self * aMultiplicand.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 22:02:12' prior: 50342888!
beMultipliedToAFraccion: aMultiplier

	^ self * aMultiplier.! !
!Fraccion methodsFor: 'arithmetic relations' stamp: 'MG 10/24/2021 22:06:58'!
commonDenominatorBetween: aFraccion
	^ self denominator * aFraccion denominator! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 22:07:13' prior: 50342496!
beAddedToAFraccion: anAddend

		| newNumerator newDenominator |
	
		newNumerator := (self numerator * anAddend denominator) + (self denominator * anAddend numerator).
		newDenominator := self commonDenominatorBetween: anAddend. 
		
		^Fraccion with: newNumerator over: newDenominator.
		! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 22:07:24'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 22:07:24'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 22:08:08' prior: 50342739!
beMultipliedToAFraccion: aMultiplicand

	|newDenominator newNumerator|
	
	newNumerator := aMultiplicand numerator *  self numerator.
	newDenominator  := aMultiplicand commonDenominatorBetween: self.
	
	^Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 22:08:28' prior: 50342441!
beSubtrahedToAFraccion: aMinuend

	| newNumerator newDenominator |
	
	newNumerator := (aMinuend numerator * self denominator) - (aMinuend denominator * self numerator).
	newDenominator := aMinuend commonDenominatorBetween: self.
	
	^Fraccion with:  newNumerator over: newDenominator. ! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 22:08:30'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 22:08:30'!
PASSED!
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 22:09:22' prior: 50342727!
beMultipliedToAnEntero: aMultiplicand

	| newNumerator newDenominator |
		
	newNumerator := aMultiplicand * self numerator.
	newDenominator := self denominator.
	
	^Fraccion with: newNumerator over: newDenominator. ! !

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 22:09:43'!
PASSED!

!testRun: #NumeroTest #test01isZeroReturnsTrueWhenAskToZero stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test02isZeroReturnsFalseWhenAskToOthersButZero stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test03isOneReturnsTrueWhenAskToOne stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test04isOneReturnsFalseWhenAskToOtherThanOne stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test05EnteroAddsWithEnteroCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test06EnteroMultipliesWithEnteroCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test07EnteroDividesEnteroCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test08FraccionAddsWithFraccionCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test09FraccionMultipliesWithFraccionCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test10FraccionDividesFraccionCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test11EnteroAddsFraccionCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test12FraccionAddsEnteroCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test13EnteroMultipliesFraccionCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test14FraccionMultipliesEnteroCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test15EnteroDividesFraccionCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test16FraccionDividesEnteroCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test17AFraccionCanBeEqualToAnEntero stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test18AparentFraccionesAreEqual stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test19AddingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test20MultiplyingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test21DividingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test22DividingEnterosCanReturnAFraccion stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test23CanNotDivideEnteroByZero stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test24CanNotDivideFraccionByZero stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test25AFraccionCanNotBeZero stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test26AFraccionCanNotBeOne stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test27EnteroSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test28FraccionSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test29EnteroSubstractsFraccionCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test30FraccionSubstractsEnteroCorrectly stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test31SubstractingFraccionesCanReturnAnEntero stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test32SubstractingSameEnterosReturnsZero stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test33SubstractingSameFraccionesReturnsZero stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test34SubstractingAHigherValueToANumberReturnsANegativeNumber stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test35FibonacciZeroIsOne stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test36FibonacciOneIsOne stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test37FibonacciEnteroReturnsAddingPreviousTwoFibonacciEnteros stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test38FibonacciNotDefinedForNegativeNumbers stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test39NegationOfEnteroIsCorrect stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test40NegationOfFraccionIsCorrect stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test41SignIsCorrectlyAssignedToFractionWithTwoNegatives stamp: 'MG 10/24/2021 22:15:41'!
PASSED!

!testRun: #NumeroTest #test42SignIsCorrectlyAssignedToFractionWithNegativeDivisor stamp: 'MG 10/24/2021 22:15:41'!
PASSED!
!Fraccion methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 22:15:59' prior: 50338107 overrides: 50331973!
+ anAdder 

	^anAdder beAddedToAFraccion: self .

! !
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 22:16:10' prior: 50341002 overrides: 50331982!
/ aDivisor 

	^aDivisor beDividedToAnEntero: self.
! !
!Entero methodsFor: 'arithmetic operations' stamp: 'MG 10/24/2021 22:16:18' prior: 50339821 overrides: 50331968!
* aMultiplier 

	^aMultiplier beMultipliedToAnEntero: self.
! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/24/2021 22:17:00' prior: 50342905!
beAddedToAFraccion: anAddend

	| newNumerator newDenominator |
	
	newNumerator := (self numerator * anAddend denominator) + (self denominator * anAddend numerator).
	newDenominator := self commonDenominatorBetween: anAddend. 
		
	^Fraccion with: newNumerator over: newDenominator.
		! !

----QUIT----(24 October 2021 22:17:31) Ejercicio3Parte2.image priorSource: 158995!

----STARTUP---- (25 October 2021 00:15:04) as /home/tin-gprieto/Documentos/facultad/trabajos_practicos/algo3/repo/Resoluciones/Ejercicio3/Parte2/Ejercicio3Parte2.image!

!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:15:31' prior: 50332903!
beAddedToAnEntero: anAugend
	
	^ Entero with: anAugend integerValue + self integerValue.
! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:15:36' prior: 50341221!
beDividedToAFraccion: aDividend

	| newNumerator newDenominator |
		
	newNumerator := aDividend numerator.
	newDenominator := (aDividend denominator * self).
	
	^ Fraccion with: newNumerator over: newDenominator.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:15:49' prior: 50340986!
beDividedToAnEntero: aDividend

	^ Fraccion with: aDividend over: self.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:16:03' prior: 50342489!
beMultipliedToAnEntero: aMultiplicand

	^ Entero with: aMultiplicand 		integerValue * self integerValue.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:16:22' prior: 50342430!
beSubtrahedToAFraccion: aMinuend

	| newNumerator newDenominator |
	
	newNumerator :=  aMinuend numerator - (self * aMinuend denominator).
	newDenominator :=  aMinuend denominator.
	
	^ Fraccion with:  newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic relations' stamp: 'MG 10/25/2021 00:16:35' prior: 50342899!
commonDenominatorBetween: aFraccion

	^ self denominator * aFraccion denominator! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:16:47' prior: 50343521!
beAddedToAFraccion: anAddend

	| newNumerator newDenominator |
	
	newNumerator := (self numerator * anAddend denominator) + (self denominator * anAddend numerator).
	newDenominator := self commonDenominatorBetween: anAddend. 
		
	^ Fraccion with: newNumerator over: newDenominator.
		! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:17:03' prior: 50337797!
beAddedToAnEntero: anAugend
	
	| newNumerator newDenominator |
	
	newNumerator  := (anAugend * self denominator) + self numerator.
	newDenominator := self denominator.
	
	^ Fraccion with:  newNumerator over: newDenominator.
		
! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:17:17' prior: 50341210!
beDividedToAFraccion: aDividend

	| newNumerator newDenominator |

	newNumerator := ( aDividend numerator *  self denominator).
	newDenominator := (aDividend denominator * self numerator).

	^ Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:17:25' prior: 50340992!
beDividedToAnEntero: aDividend

	| newNumerator newDenominator |
		
	newNumerator := (self denominator * aDividend).
	newDenominator := self numerator.
	
	^ Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:17:31' prior: 50343613!
beDividedToAFraccion: aDividend

	| newNumerator newDenominator |

	newNumerator := (aDividend numerator *  self denominator).
	newDenominator := (aDividend denominator * self numerator).

	^ Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:17:56' prior: 50343055!
beMultipliedToAFraccion: aMultiplicand

	| newNumerator newDenominator |
	
	newNumerator := (aMultiplicand numerator *  self numerator).
	newDenominator  := aMultiplicand commonDenominatorBetween: self.
	
	^ Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:18:04' prior: 50343645!
beMultipliedToAFraccion: aMultiplicand

	| newNumerator newDenominator |
	
	newNumerator := aMultiplicand numerator *  self numerator.
	newDenominator  := aMultiplicand commonDenominatorBetween: self.
	
	^ Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:18:10' prior: 50343624!
beDividedToAnEntero: aDividend

	| newNumerator newDenominator |
		
	newNumerator := self denominator * aDividend.
	newDenominator := self numerator.
	
	^ Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:18:20' prior: 50343634!
beDividedToAFraccion: aDividend

	| newNumerator newDenominator |

	newNumerator := aDividend numerator *  self denominator.
	newDenominator := aDividend denominator * self numerator.

	^ Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:19:01' prior: 50343217!
beMultipliedToAnEntero: aMultiplicand

	| newNumerator newDenominator |
		
	newNumerator := aMultiplicand * self numerator.
	newDenominator := self denominator.
	
	^ Fraccion with: newNumerator over: newDenominator. ! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:19:05' prior: 50343067!
beSubtrahedToAFraccion: aMinuend

	| newNumerator newDenominator |
	
	newNumerator := (aMinuend numerator * self denominator) - (aMinuend denominator * self numerator).
	newDenominator := aMinuend commonDenominatorBetween: self.
	
	^ Fraccion with:  newNumerator over: newDenominator. ! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:19:10' prior: 50342194!
beSubtrahedToAnEntero: aMinuend

	| newNumerator newDenominator |
	
	newNumerator := (aMinuend * self denominator) - (self numerator).
	newDenominator := self denominator.
	
	^ Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:19:28' prior: 50343602!
beAddedToAnEntero: anAugend
	
	| newNumerator newDenominator |
	
	newNumerator  := (anAugend * self denominator) + self numerator.
	newDenominator := self denominator.
	
	^ Fraccion with: newNumerator over: newDenominator.
		
! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:19:35' prior: 50343701!
beSubtrahedToAFraccion: aMinuend

	| newNumerator newDenominator |
	
	newNumerator := (aMinuend numerator * self denominator) - (aMinuend denominator * self numerator).
	newDenominator := aMinuend commonDenominatorBetween: self.
	
	^ Fraccion with: newNumerator over: newDenominator. ! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:19:50' prior: 50343725!
beAddedToAnEntero: anAugend
	
	| newNumerator newDenominator |
	
	newNumerator := (anAugend * self denominator) + self numerator.
	newDenominator := self denominator.
	
	^ Fraccion with: newNumerator over: newDenominator.
		
! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:19:58' prior: 50343657!
beMultipliedToAFraccion: aMultiplicand

	| newNumerator newDenominator |
	
	newNumerator := aMultiplicand numerator *  self numerator.
	newDenominator := aMultiplicand commonDenominatorBetween: self.
	
	^ Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:20:19' prior: 50343679!
beDividedToAFraccion: aDividend

	| newNumerator newDenominator |

	newNumerator := aDividend numerator * self denominator.
	newDenominator := aDividend denominator * self numerator.

	^ Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:20:21' prior: 50343772!
beDividedToAFraccion: aDividend

	| newNumerator newDenominator |

	newNumerator := aDividend numerator * self denominator.
	newDenominator := aDividend denominator * self numerator.

	^ Fraccion with: newNumerator over: newDenominator.! !
!Fraccion methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:20:33' prior: 50343760!
beMultipliedToAFraccion: aMultiplicand

	| newNumerator newDenominator |
	
	newNumerator := aMultiplicand numerator * self numerator.
	newDenominator := aMultiplicand commonDenominatorBetween: self.
	
	^ Fraccion with: newNumerator over: newDenominator.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:21:05' prior: 50343572!
beSubtrahedToAFraccion: aMinuend

	| newNumerator newDenominator |
	
	newNumerator :=  aMinuend numerator - (self * aMinuend denominator).
	newDenominator := aMinuend denominator.
	
	^ Fraccion with:  newNumerator over: newDenominator.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:21:06' prior: 50343806!
beSubtrahedToAFraccion: aMinuend

	| newNumerator newDenominator |
	
	newNumerator := aMinuend numerator - (self * aMinuend denominator).
	newDenominator := aMinuend denominator.
	
	^ Fraccion with:  newNumerator over: newDenominator.! !
!Entero methodsFor: 'arithmetic advanced operations' stamp: 'MG 10/25/2021 00:21:11' prior: 50343817!
beSubtrahedToAFraccion: aMinuend

	| newNumerator newDenominator |
	
	newNumerator := aMinuend numerator - (self * aMinuend denominator).
	newDenominator := aMinuend denominator.
	
	^ Fraccion with: newNumerator over: newDenominator.! !

----QUIT----(25 October 2021 00:21:39) Ejercicio3Parte2.image priorSource: 380222!