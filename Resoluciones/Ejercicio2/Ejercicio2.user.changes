

----STARTUP---- (13 October 2021 19:05:01) as /home/tin-gprieto/Documentos/facultad/trabajos_practicos/algo3/repo/Resoluciones/Ejercicio2/Nuevo/Ejercicio2.image!


----End fileIn of /home/tin-gprieto/Documentos/facultad/trabajos_practicos/algo3/repo/Ejercicios/02-CodigoRepetido/CodigoRepetido-Ejercicio.st----!
!CustomerBook methodsFor: 'customer management' stamp: 'MG 10/13/2021 19:06:38' prior: 50331859!
removeCustomerNamed: aName 
 
	(active includes: aName) ifTrue: [
	 	^self removeCustomerNamed: aName in: active.
	].
	 (suspended includes: aName) ifTrue: [
		^self removeCustomerNamed: aName in: suspended .	
	]. 
	
	^ NotFound signal.
! !
!CustomerBook methodsFor: 'customer management' stamp: 'MG 10/13/2021 19:06:56'!
removeCustomerNamed: aName in: aCustomerState
 
	1 to: aCustomerState size do: 
	[ :index | 
		aName = (aCustomerState at: index) 
			ifTrue: [
				aCustomerState removeAt: index.
				^aName.
			] 
	].
! !

TestCase subclass: #CustomerBookTest
	instanceVariableNames: ''
	classVariableNames: 'JohnLennon PaulMcCartney RingoStarr'
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classDefinition: #CustomerBookTest category: 'CodigoRepetido-Ejercicio' stamp: 'MG 10/13/2021 19:07:31'!
TestCase subclass: #CustomerBookTest
	instanceVariableNames: ''
	classVariableNames: 'JohnLennon PaulMcCartney RingoStarr'
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:09:19'!
ThereIsOnly: aCustomer in:aCustomerBook 
	self assert: aCustomerBook numberOfCustomers = 1.
	self assert: (aCustomerBook includesCustomerNamed: aCustomer ).! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:09:26'!
canNotDo: anAction with: aCustomerBook onError: typeOfError 

	[ anAction value.
	self fail ]
		on: typeOfError
		do: [ :anError | 
			self assert: aCustomerBook numberOfCustomers = 1.
			self assert: (aCustomerBook includesCustomerNamed: JohnLennon ) ]! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:09:33'!
canNotDo: anAction with: aCustomerBook onError: typeOfError check: aBlock

	[ anAction value.
	self fail ]
		on: typeOfError
		do: (aBlock value: typeOfError).! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:09:39'!
modifiedWith: anAction shouldNotTakeMoreThan: milliseconds
	
	|millisecondsBeforeRunning millisecondsAfterRunning |
	
	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	
	anAction value. 
	
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.
	
	self assert: (millisecondsAfterRunning-millisecondsBeforeRunning) < (milliseconds * millisecond)! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:09:45'!
thereAreOnly: numberOfSuspended suspendedCustomersIn: aCustomerBook
	
	self assert: 0 equals: aCustomerBook numberOfActiveCustomers.
	self assert: numberOfSuspended equals: aCustomerBook numberOfSuspendedCustomers.
	self assert: numberOfSuspended equals: aCustomerBook numberOfCustomers.! !
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:10:07'!
test01PruebasOK
	|aCustomerBook|
	aCustomerBook := CustomerBook new.
	self modifiedWith: [ aCustomerBook addCustomerNamed: PaulMcCartney ]  shouldNotTakeMoreThan: 50.! !
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:10:13'!
test02PruebasOK
	|aCustomerBook|
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: PaulMcCartney .
	self modifiedWith: [aCustomerBook removeCustomerNamed: PaulMcCartney ]  shouldNotTakeMoreThan: 100.! !
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:10:18'!
test03PruebasOK
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	
	self canNotDo: [ aCustomerBook addCustomerNamed: '' ] 
		with: aCustomerBook onError: Error 
		check: [:anError | 
				self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
				self assert: aCustomerBook isEmpty
			   ].! !
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:10:24'!
test04PruebasOK
		
	| aCustomerBook  |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo: [ aCustomerBook removeCustomerNamed: PaulMcCartney ] 
		with: aCustomerBook onError: NotFound 
		check: [self ThereIsOnly: JohnLennon in: aCustomerBook ].! !
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:10:35'!
test05Pruebas
	| aCustomerBook  |
	aCustomerBook := CustomerBook new.

	aCustomerBook addCustomerNamed: PaulMcCartney .
	aCustomerBook suspendCustomerNamed: PaulMcCartney .
	
	self thereAreOnly: 1 suspendedCustomersIn: aCustomerBook.
	self assert: (aCustomerBook includesCustomerNamed: PaulMcCartney ).! !
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:10:42'!
test06Pruebas
	| aCustomerBook  |
	aCustomerBook := CustomerBook new.

	aCustomerBook addCustomerNamed: PaulMcCartney .
	aCustomerBook suspendCustomerNamed: PaulMcCartney .
	aCustomerBook removeCustomerNamed: PaulMcCartney .
	
	self thereAreOnly: 0 suspendedCustomersIn: aCustomerBook.
	self deny: (aCustomerBook includesCustomerNamed: PaulMcCartney ).! !
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:10:49'!
test07PruebasOK
	
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: RingoStarr .] 
		with: aCustomerBook onError: CantSuspend 
		check: [:anError | self ThereIsOnly: JohnLennon in: aCustomerBook ].! !
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:10:56'!
test08PruebasOK
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	aCustomerBook suspendCustomerNamed: JohnLennon .	
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: JohnLennon .] 
		with: aCustomerBook onError: CantSuspend 
		check: [:anError | self ThereIsOnly: JohnLennon in: aCustomerBook ].! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 19:11:06' prior: 50331692!
test01AddingCustomerShouldNotTakeMoreThan50Milliseconds

	|aCustomerBook|

	aCustomerBook := CustomerBook new.
	
	self modifiedWith: [ aCustomerBook addCustomerNamed: PaulMcCartney ]  shouldNotTakeMoreThan: 50.
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 19:11:13' prior: 50331709!
test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds

	|aCustomerBook|

	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: PaulMcCartney .
	
	self modifiedWith: [aCustomerBook removeCustomerNamed: PaulMcCartney ]  shouldNotTakeMoreThan: 100.
	
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 19:11:21' prior: 50331729!
test03CanNotAddACustomerWithEmptyName 

	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.

	[ aCustomerBook addCustomerNamed: ''.
	self fail ]
		on: Error 
		do: [ :anError | 
			self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
			self assert: aCustomerBook isEmpty ]
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 19:11:33' prior: 50331741!
test04CanNotRemoveAnInvalidCustomer
	
	| aCustomerBook  |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo: [ aCustomerBook removeCustomerNamed: PaulMcCartney ] with: aCustomerBook onError: NotFound.
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 19:11:41' prior: 50331756!
test05SuspendingACustomerShouldNotRemoveItFromCustomerBook

	| aCustomerBook  |

	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: PaulMcCartney .
	aCustomerBook suspendCustomerNamed: PaulMcCartney .
	
	self thereAreOnly: 1 suspendedCustomersIn: aCustomerBook.
	self assert: (aCustomerBook includesCustomerNamed: PaulMcCartney ).
	

	
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 19:11:49' prior: 50331775!
test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook

	| aCustomerBook  |
	
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: PaulMcCartney .
	aCustomerBook suspendCustomerNamed: PaulMcCartney .
	aCustomerBook removeCustomerNamed: PaulMcCartney .
	
	self thereAreOnly: 0 suspendedCustomersIn: aCustomerBook.
	self deny: (aCustomerBook includesCustomerNamed: PaulMcCartney ).


	
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 19:11:57' prior: 50331796!
test07CanNotSuspendAnInvalidCustomer
	
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: RingoStarr .] with: aCustomerBook onError: CantSuspend.



	
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 19:12:07' prior: 50331812!
test08CanNotSuspendAnAlreadySuspendedCustomer
	
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	aCustomerBook suspendCustomerNamed: JohnLennon .
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: JohnLennon .] with: aCustomerBook onError: CantSuspend.

! !

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 19:12:17'!
PASSED!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 19:12:19'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 19:12:19'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 19:12:19'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 19:12:19'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:12:19'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:12:19'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 19:12:19'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 19:12:19'!
PASSED!

!testRun: #CustomerBookTest #test01PruebasOK stamp: 'MG 10/13/2021 19:12:20'!
PASSED!

!testRun: #CustomerBookTest #test02PruebasOK stamp: 'MG 10/13/2021 19:12:20'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:12:20'!
ERROR!

!testRun: #CustomerBookTest #test04PruebasOK stamp: 'MG 10/13/2021 19:12:20'!
ERROR!

!testRun: #CustomerBookTest #test05Pruebas stamp: 'MG 10/13/2021 19:12:20'!
PASSED!

!testRun: #CustomerBookTest #test06Pruebas stamp: 'MG 10/13/2021 19:12:20'!
PASSED!

!testRun: #CustomerBookTest #test07PruebasOK stamp: 'MG 10/13/2021 19:12:20'!
PASSED!

!testRun: #CustomerBookTest #test08PruebasOK stamp: 'MG 10/13/2021 19:12:20'!
PASSED!
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:12:45' prior: 50332057!
test04PruebasOK
		
	| aCustomerBook  |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo: [ aCustomerBook removeCustomerNamed: PaulMcCartney ] 
		with: aCustomerBook onError: NotFound 
		check: [:anError | self ThereIsOnly: JohnLennon in: aCustomerBook ].! !

!testRun: #CustomerBookTest #test01PruebasOK stamp: 'MG 10/13/2021 19:12:48'!
PASSED!

!testRun: #CustomerBookTest #test02PruebasOK stamp: 'MG 10/13/2021 19:12:48'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:12:48'!
ERROR!

!testRun: #CustomerBookTest #test04PruebasOK stamp: 'MG 10/13/2021 19:12:48'!
PASSED!

!testRun: #CustomerBookTest #test05Pruebas stamp: 'MG 10/13/2021 19:12:48'!
PASSED!

!testRun: #CustomerBookTest #test06Pruebas stamp: 'MG 10/13/2021 19:12:48'!
PASSED!

!testRun: #CustomerBookTest #test07PruebasOK stamp: 'MG 10/13/2021 19:12:48'!
PASSED!

!testRun: #CustomerBookTest #test08PruebasOK stamp: 'MG 10/13/2021 19:12:48'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:12:48'!
ERROR!

!testRun: #CustomerBookTest #test01PruebasOK stamp: 'MG 10/13/2021 19:12:54'!
PASSED!

!testRun: #CustomerBookTest #test02PruebasOK stamp: 'MG 10/13/2021 19:12:55'!
PASSED!

!testRun: #CustomerBookTest #test04PruebasOK stamp: 'MG 10/13/2021 19:12:56'!
PASSED!

!testRun: #CustomerBookTest #test05Pruebas stamp: 'MG 10/13/2021 19:12:57'!
PASSED!

!testRun: #CustomerBookTest #test06Pruebas stamp: 'MG 10/13/2021 19:12:57'!
PASSED!

!testRun: #CustomerBookTest #test07PruebasOK stamp: 'MG 10/13/2021 19:12:58'!
PASSED!

!testRun: #CustomerBookTest #test08PruebasOK stamp: 'MG 10/13/2021 19:12:59'!
PASSED!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 19:13:04'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 19:13:04'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 19:13:04'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 19:13:04'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:13:04'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:13:04'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 19:13:04'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 19:13:04'!
PASSED!

!testRun: #CustomerBookTest #test01PruebasOK stamp: 'MG 10/13/2021 19:13:05'!
PASSED!

!testRun: #CustomerBookTest #test02PruebasOK stamp: 'MG 10/13/2021 19:13:05'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:13:05'!
ERROR!

!testRun: #CustomerBookTest #test04PruebasOK stamp: 'MG 10/13/2021 19:13:05'!
PASSED!

!testRun: #CustomerBookTest #test05Pruebas stamp: 'MG 10/13/2021 19:13:05'!
PASSED!

!testRun: #CustomerBookTest #test06Pruebas stamp: 'MG 10/13/2021 19:13:05'!
PASSED!

!testRun: #CustomerBookTest #test07PruebasOK stamp: 'MG 10/13/2021 19:13:05'!
PASSED!

!testRun: #CustomerBookTest #test08PruebasOK stamp: 'MG 10/13/2021 19:13:05'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:13:05'!
ERROR!

----QUIT----(13 October 2021 19:13:22) Ejercicio2.image priorSource: 183!

----STARTUP---- (13 October 2021 19:17:54) as /home/tin-gprieto/Documentos/facultad/trabajos_practicos/algo3/repo/Resoluciones/Ejercicio2/Ejercicio2.image!


!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test01PruebasOK stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test02PruebasOK stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:18:10'!
ERROR!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test04PruebasOK stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test05Pruebas stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test06Pruebas stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test07PruebasOK stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test08PruebasOK stamp: 'MG 10/13/2021 19:18:10'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:18:10'!
ERROR!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 19:18:14'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 19:18:14'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 19:18:14'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 19:18:14'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:18:14'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:18:14'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 19:18:14'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 19:18:14'!
PASSED!

!testRun: #CustomerBookTest #test01PruebasOK stamp: 'MG 10/13/2021 19:18:16'!
PASSED!

!testRun: #CustomerBookTest #test02PruebasOK stamp: 'MG 10/13/2021 19:18:17'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:18:18'!
ERROR!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:18:18'!
ERROR!

!testRun: #CustomerBookTest #test04PruebasOK stamp: 'MG 10/13/2021 19:18:21'!
PASSED!

!testRun: #CustomerBookTest #test05Pruebas stamp: 'MG 10/13/2021 19:18:22'!
PASSED!

!testRun: #CustomerBookTest #test06Pruebas stamp: 'MG 10/13/2021 19:18:23'!
PASSED!

!testRun: #CustomerBookTest #test07PruebasOK stamp: 'MG 10/13/2021 19:18:24'!
PASSED!

!testRun: #CustomerBookTest #test08PruebasOK stamp: 'MG 10/13/2021 19:18:25'!
PASSED!
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:18:30'!
test05PruebasOk
	| aCustomerBook  |
	aCustomerBook := CustomerBook new.

	aCustomerBook addCustomerNamed: PaulMcCartney .
	aCustomerBook suspendCustomerNamed: PaulMcCartney .
	
	self thereAreOnly: 1 suspendedCustomersIn: aCustomerBook.
	self assert: (aCustomerBook includesCustomerNamed: PaulMcCartney ).! !

!methodRemoval: CustomerBookTest #test05PruebasOk stamp: 'MG 10/13/2021 19:18:47'!
test05PruebasOk
	| aCustomerBook  |
	aCustomerBook := CustomerBook new.

	aCustomerBook addCustomerNamed: PaulMcCartney .
	aCustomerBook suspendCustomerNamed: PaulMcCartney .
	
	self thereAreOnly: 1 suspendedCustomersIn: aCustomerBook.
	self assert: (aCustomerBook includesCustomerNamed: PaulMcCartney ).!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 19:21:58'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 19:21:58'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 19:21:58'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 19:21:58'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:21:58'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:21:58'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 19:21:58'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 19:21:58'!
PASSED!

!testRun: #CustomerBookTest #test01PruebasOK stamp: 'MG 10/13/2021 19:22:00'!
PASSED!

!testRun: #CustomerBookTest #test02PruebasOK stamp: 'MG 10/13/2021 19:22:00'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:22:00'!
ERROR!

!testRun: #CustomerBookTest #test04PruebasOK stamp: 'MG 10/13/2021 19:22:00'!
PASSED!

!testRun: #CustomerBookTest #test05Pruebas stamp: 'MG 10/13/2021 19:22:00'!
PASSED!

!testRun: #CustomerBookTest #test06Pruebas stamp: 'MG 10/13/2021 19:22:00'!
PASSED!

!testRun: #CustomerBookTest #test07PruebasOK stamp: 'MG 10/13/2021 19:22:00'!
PASSED!

!testRun: #CustomerBookTest #test08PruebasOK stamp: 'MG 10/13/2021 19:22:00'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:22:00'!
ERROR!

!testRun: #CustomerBookTest #test01PruebasOK stamp: 'MG 10/13/2021 19:22:03'!
PASSED!

!testRun: #CustomerBookTest #test02PruebasOK stamp: 'MG 10/13/2021 19:22:04'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:22:05'!
ERROR!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:22:05'!
ERROR!

!testRun: #CustomerBookTest #test04PruebasOK stamp: 'MG 10/13/2021 19:22:09'!
PASSED!

!testRun: #CustomerBookTest #test05Pruebas stamp: 'MG 10/13/2021 19:22:11'!
PASSED!

!testRun: #CustomerBookTest #test06Pruebas stamp: 'MG 10/13/2021 19:22:12'!
PASSED!

!testRun: #CustomerBookTest #test07PruebasOK stamp: 'MG 10/13/2021 19:22:13'!
PASSED!

!testRun: #CustomerBookTest #test08PruebasOK stamp: 'MG 10/13/2021 19:22:13'!
PASSED!
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:22:58' prior: 50331972!
ThereIsOnly: aCustomer in:aCustomerBook 

	self assert: aCustomerBook numberOfCustomers = 1.
	self assert: (aCustomerBook includesCustomerNamed: aCustomer ).! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:23:27' prior: 50331980!
canNotDo: anAction with: aCustomerBook onError: typeOfError 

	[ anAction value.
	self fail ]
		on: typeOfError
		do: [ :anError | 
			self ThereIsOnly: JohnLennon in: aCustomerBook ]! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:23:52'!
thereIsOnly: aCustomer in:aCustomerBook 

	self assert: aCustomerBook numberOfCustomers = 1.
	self assert: (aCustomerBook includesCustomerNamed: aCustomer ).! !

!methodRemoval: CustomerBookTest #ThereIsOnly:in: stamp: 'MG 10/13/2021 19:23:57'!
ThereIsOnly: aCustomer in:aCustomerBook 

	self assert: aCustomerBook numberOfCustomers = 1.
	self assert: (aCustomerBook includesCustomerNamed: aCustomer ).!
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:24:03' prior: 50332618!
canNotDo: anAction with: aCustomerBook onError: typeOfError 

	[ anAction value.
	self fail ]
		on: typeOfError
		do: [ :anError | 
			self thereIsOnly: JohnLennon in: aCustomerBook ]! !
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:24:22' prior: 50332095!
test07PruebasOK
	
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: RingoStarr .] 
		with: aCustomerBook onError: CantSuspend 
		check: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].! !
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:24:26' prior: 50332108!
test08PruebasOK
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	aCustomerBook suspendCustomerNamed: JohnLennon .	
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: JohnLennon .] 
		with: aCustomerBook onError: CantSuspend 
		check: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].! !
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:24:35' prior: 50332280!
test04PruebasOK
		
	| aCustomerBook  |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo: [ aCustomerBook removeCustomerNamed: PaulMcCartney ] 
		with: aCustomerBook onError: NotFound 
		check: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].! !

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 19:25:23'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 19:25:23'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 19:25:23'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 19:25:23'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:25:23'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:25:23'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 19:25:23'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 19:25:23'!
PASSED!

!testRun: #CustomerBookTest #test01PruebasOK stamp: 'MG 10/13/2021 19:25:25'!
PASSED!

!testRun: #CustomerBookTest #test02PruebasOK stamp: 'MG 10/13/2021 19:25:27'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:25:27'!
ERROR!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:25:27'!
ERROR!

!testRun: #CustomerBookTest #test04PruebasOK stamp: 'MG 10/13/2021 19:25:34'!
PASSED!

!testRun: #CustomerBookTest #test05Pruebas stamp: 'MG 10/13/2021 19:25:35'!
PASSED!

!testRun: #CustomerBookTest #test06Pruebas stamp: 'MG 10/13/2021 19:25:36'!
PASSED!

!testRun: #CustomerBookTest #test07PruebasOK stamp: 'MG 10/13/2021 19:25:37'!
PASSED!

!testRun: #CustomerBookTest #test08PruebasOK stamp: 'MG 10/13/2021 19:25:38'!
PASSED!
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 19:29:16' prior: 50332145!
test03CanNotAddACustomerWithEmptyName 

	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.

	[ aCustomerBook addCustomerNamed: ''.
	self fail ]
		on: Error 
		do: [ :anError | 
			self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
			self assert: aCustomerBook isEmpty ].
! !

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:36:24'!
ERROR!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:36:24'!
ERROR!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:38:26'!
ERROR!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:38:26'!
ERROR!

anError!
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:42:05' prior: 50331991!
canNotDo: anAction with: aCustomerBook onError: typeOfError check: aBlock

	[ anAction value.
	self fail ]
		on: typeOfError
		do: aBlock.! !

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:42:10'!
PASSED!

!testRun: #CustomerBookTest #test07PruebasOK stamp: 'MG 10/13/2021 19:42:11'!
PASSED!

!testRun: #CustomerBookTest #test08PruebasOK stamp: 'MG 10/13/2021 19:42:12'!
PASSED!

!testRun: #CustomerBookTest #test01PruebasOK stamp: 'MG 10/13/2021 19:42:14'!
PASSED!

!testRun: #CustomerBookTest #test02PruebasOK stamp: 'MG 10/13/2021 19:42:14'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:42:14'!
PASSED!

!testRun: #CustomerBookTest #test04PruebasOK stamp: 'MG 10/13/2021 19:42:14'!
PASSED!

!testRun: #CustomerBookTest #test05Pruebas stamp: 'MG 10/13/2021 19:42:14'!
PASSED!

!testRun: #CustomerBookTest #test06Pruebas stamp: 'MG 10/13/2021 19:42:14'!
PASSED!

!testRun: #CustomerBookTest #test07PruebasOK stamp: 'MG 10/13/2021 19:42:14'!
PASSED!

!testRun: #CustomerBookTest #test08PruebasOK stamp: 'MG 10/13/2021 19:42:14'!
PASSED!
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:42:58' prior: 50332044!
test03PruebasOK
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	
	self canNotDo: [ aCustomerBook addCustomerNamed: '' ] 
		"on"with: aCustomerBook onError: Error 
		"do"check: [:anError | 
				self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
				self assert: aCustomerBook isEmpty
			   ].! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:43:45'!
canNotDo: anAction onError: typeOfError check: aBlock

	[ anAction value.
	self fail ]
		on: typeOfError
		do: aBlock.! !

!methodRemoval: CustomerBookTest #canNotDo:with:onError:check: stamp: 'MG 10/13/2021 19:44:07'!
canNotDo: anAction with: aCustomerBook onError: typeOfError check: aBlock

	[ anAction value.
	self fail ]
		on: typeOfError
		do: aBlock.!
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:44:15' prior: 50332652!
test07PruebasOK
	
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: RingoStarr .] 
		onError: CantSuspend 
		check: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].! !
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:44:20' prior: 50332665!
test08PruebasOK
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	aCustomerBook suspendCustomerNamed: JohnLennon .	
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: JohnLennon .] 
		onError: CantSuspend 
		check: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].! !
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:44:35' prior: 50332680!
test04PruebasOK
		
	| aCustomerBook  |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo: [ aCustomerBook removeCustomerNamed: PaulMcCartney ] 
		onError: NotFound 
		check: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:46:58' prior: 50332822!
canNotDo: anAction onError: typeOfError check: aBlock

	[ anAction value.
	self fail ]
		on: typeOfError
		do: aBlock.! !

!testRun: #CustomerBookTest #test01PruebasOK stamp: 'MG 10/13/2021 19:47:06'!
PASSED!

!testRun: #CustomerBookTest #test02PruebasOK stamp: 'MG 10/13/2021 19:47:06'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:47:06'!
ERROR!

!testRun: #CustomerBookTest #test04PruebasOK stamp: 'MG 10/13/2021 19:47:06'!
PASSED!

!testRun: #CustomerBookTest #test05Pruebas stamp: 'MG 10/13/2021 19:47:06'!
PASSED!

!testRun: #CustomerBookTest #test06Pruebas stamp: 'MG 10/13/2021 19:47:06'!
PASSED!

!testRun: #CustomerBookTest #test07PruebasOK stamp: 'MG 10/13/2021 19:47:06'!
PASSED!

!testRun: #CustomerBookTest #test08PruebasOK stamp: 'MG 10/13/2021 19:47:06'!
PASSED!

!testRun: #CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 19:47:06'!
ERROR!
!CustomerBookTest methodsFor: 'pruebas' stamp: 'MG 10/13/2021 19:47:32' prior: 50332808!
test03PruebasOK
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	
	self canNotDo: [ aCustomerBook addCustomerNamed: '' ] 
		onError: Error 
		check: [:anError | 
				self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
				self assert: aCustomerBook isEmpty
			   ].! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:48:53'!
canNotDo: anAction onError: typeOfError checkIf: aBlock

	[ anAction value.
	self fail ]
		on: typeOfError
		do: aBlock.! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:49:11' prior: 50332919!
canNotDo: anAction onError: typeOfError checkIf: aBlock

	[ anAction value.
	self fail ]
		on: typeOfError
		do: aBlock.! !

!methodRemoval: CustomerBookTest #canNotDo:onError:checkIf: stamp: 'MG 10/13/2021 19:49:49'!
canNotDo: anAction onError: typeOfError checkIf: aBlock

	[ anAction value.
	self fail ]
		on: typeOfError
		do: aBlock.!

!methodRemoval: CustomerBookTest #canNotDo:with:onError: stamp: 'MG 10/13/2021 19:51:15'!
canNotDo: anAction with: aCustomerBook onError: typeOfError 

	[ anAction value.
	self fail ]
		on: typeOfError
		do: [ :anError | 
			self thereIsOnly: JohnLennon in: aCustomerBook ]!
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 19:51:43' prior: 50332211!
test08CanNotSuspendAnAlreadySuspendedCustomer
	
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	aCustomerBook suspendCustomerNamed: JohnLennon .	
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: JohnLennon .] 
		onError: CantSuspend 
		check: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].

! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 19:52:10' prior: 50332199!
test07CanNotSuspendAnInvalidCustomer
	
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: RingoStarr .] 
		onError: CantSuspend 
		check: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].



	
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 19:52:33' prior: 50332158!
test04CanNotRemoveAnInvalidCustomer
	
	| aCustomerBook  |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo: [ aCustomerBook removeCustomerNamed: PaulMcCartney ] 
		onError: NotFound 
		check: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 19:52:57' prior: 50332747!
test03CanNotAddACustomerWithEmptyName 

	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	
	self canNotDo: [ aCustomerBook addCustomerNamed: '' ] 
		onError: Error 
		check: [:anError | 
				self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
				self assert: aCustomerBook isEmpty
			   ].
! !

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 19:53:03'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 19:53:03'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 19:53:03'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 19:53:03'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:53:03'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 19:53:03'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 19:53:03'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 19:53:03'!
PASSED!
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:55:51' prior: 50332627!
thereIsOnly: aCustomer in: aCustomerBook 

	self assert: aCustomerBook numberOfCustomers = 1.
	self assert: (aCustomerBook includesCustomerNamed: aCustomer ).! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 19:56:26' prior: 50332875!
canNotDo: anAction onError: typeOfError check: anAssertBlock

	[ anAction value.
	self fail ]
		on: typeOfError
		do: anAssertBlock.! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 20:06:49' prior: 50333041!
canNotDo: anAction onError: typeOfError check: anAssertionBlock

	[ anAction value.
	self fail ]
		on: typeOfError
		do: anAssertionBlock.! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 20:08:39' prior: 50332123!
test01AddingCustomerShouldNotTakeMoreThan50Milliseconds

	| aCustomerBook |

	aCustomerBook := CustomerBook new.
	
	self modifiedWith: [ aCustomerBook addCustomerNamed: PaulMcCartney ]  shouldNotTakeMoreThan: 50.
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 20:08:47' prior: 50332133!
test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds

	| aCustomerBook |

	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: PaulMcCartney .
	
	self modifiedWith: [aCustomerBook removeCustomerNamed: PaulMcCartney ]  shouldNotTakeMoreThan: 100.
	
! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 20:14:03'!
modificationWith: anAction shouldNotTakeMoreThan: milliseconds
	
	|millisecondsBeforeRunning millisecondsAfterRunning |
	
	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	
	anAction value. 
	
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.
	
	self assert: (millisecondsAfterRunning-millisecondsBeforeRunning) < (milliseconds * millisecond)! !
!CustomerBookTest methodsFor: 'testsToolBox' stamp: 'MG 10/13/2021 20:14:16'!
canNotDo: anAction onError: typeOfError checkAssertion: anAssertionBlock

	[ anAction value.
	self fail ]
		on: typeOfError
		do: anAssertionBlock.! !

!methodRemoval: CustomerBookTest #canNotDo:onError:check: stamp: 'MG 10/13/2021 20:14:25'!
canNotDo: anAction onError: typeOfError check: anAssertionBlock

	[ anAction value.
	self fail ]
		on: typeOfError
		do: anAssertionBlock.!

!methodRemoval: CustomerBookTest #modifiedWith:shouldNotTakeMoreThan: stamp: 'MG 10/13/2021 20:14:30'!
modifiedWith: anAction shouldNotTakeMoreThan: milliseconds
	
	|millisecondsBeforeRunning millisecondsAfterRunning |
	
	millisecondsBeforeRunning := Time millisecondClockValue * millisecond.
	
	anAction value. 
	
	millisecondsAfterRunning := Time millisecondClockValue * millisecond.
	
	self assert: (millisecondsAfterRunning-millisecondsBeforeRunning) < (milliseconds * millisecond)!
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 20:14:43' prior: 50333057!
test01AddingCustomerShouldNotTakeMoreThan50Milliseconds

	| aCustomerBook |

	aCustomerBook := CustomerBook new.
	
	self modificationWith: [ aCustomerBook addCustomerNamed: PaulMcCartney ]  shouldNotTakeMoreThan: 50.
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 20:14:51' prior: 50333067!
test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds

	| aCustomerBook |

	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: PaulMcCartney .
	
	self modificationWith: [aCustomerBook removeCustomerNamed: PaulMcCartney ]  shouldNotTakeMoreThan: 100.
	
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 20:15:05' prior: 50332989!
test03CanNotAddACustomerWithEmptyName 

	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	
	self canNotDo: [ aCustomerBook addCustomerNamed: '' ] 
		onError: Error 
		checkAssertion: [:anError | 
				self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
				self assert: aCustomerBook isEmpty
			   ].
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 20:15:13' prior: 50332976!
test04CanNotRemoveAnInvalidCustomer
	
	| aCustomerBook  |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo: [ aCustomerBook removeCustomerNamed: PaulMcCartney ] 
		onError: NotFound 
		checkAssertion: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].
! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 20:15:19' prior: 50332948!
test08CanNotSuspendAnAlreadySuspendedCustomer
	
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	aCustomerBook suspendCustomerNamed: JohnLennon .	
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: JohnLennon .] 
		onError: CantSuspend 
		checkAssertion: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].

! !
!CustomerBookTest methodsFor: 'tests' stamp: 'MG 10/13/2021 20:15:22' prior: 50332963!
test07CanNotSuspendAnInvalidCustomer
	
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: RingoStarr .] 
		onError: CantSuspend 
		checkAssertion: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].



	
! !

!methodRemoval: CustomerBookTest #test01PruebasOK stamp: 'MG 10/13/2021 20:15:59'!
test01PruebasOK
	|aCustomerBook|
	aCustomerBook := CustomerBook new.
	self modifiedWith: [ aCustomerBook addCustomerNamed: PaulMcCartney ]  shouldNotTakeMoreThan: 50.!

!methodRemoval: CustomerBookTest #test02PruebasOK stamp: 'MG 10/13/2021 20:15:59'!
test02PruebasOK
	|aCustomerBook|
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: PaulMcCartney .
	self modifiedWith: [aCustomerBook removeCustomerNamed: PaulMcCartney ]  shouldNotTakeMoreThan: 100.!

!methodRemoval: CustomerBookTest #test03PruebasOK stamp: 'MG 10/13/2021 20:15:59'!
test03PruebasOK
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	
	self canNotDo: [ aCustomerBook addCustomerNamed: '' ] 
		onError: Error 
		check: [:anError | 
				self assert: anError messageText = CustomerBook customerCanNotBeEmptyErrorMessage.
				self assert: aCustomerBook isEmpty
			   ].!

!methodRemoval: CustomerBookTest #test04PruebasOK stamp: 'MG 10/13/2021 20:15:59'!
test04PruebasOK
		
	| aCustomerBook  |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo: [ aCustomerBook removeCustomerNamed: PaulMcCartney ] 
		onError: NotFound 
		check: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].!

!methodRemoval: CustomerBookTest #test05Pruebas stamp: 'MG 10/13/2021 20:15:59'!
test05Pruebas
	| aCustomerBook  |
	aCustomerBook := CustomerBook new.

	aCustomerBook addCustomerNamed: PaulMcCartney .
	aCustomerBook suspendCustomerNamed: PaulMcCartney .
	
	self thereAreOnly: 1 suspendedCustomersIn: aCustomerBook.
	self assert: (aCustomerBook includesCustomerNamed: PaulMcCartney ).!

!methodRemoval: CustomerBookTest #test06Pruebas stamp: 'MG 10/13/2021 20:15:59'!
test06Pruebas
	| aCustomerBook  |
	aCustomerBook := CustomerBook new.

	aCustomerBook addCustomerNamed: PaulMcCartney .
	aCustomerBook suspendCustomerNamed: PaulMcCartney .
	aCustomerBook removeCustomerNamed: PaulMcCartney .
	
	self thereAreOnly: 0 suspendedCustomersIn: aCustomerBook.
	self deny: (aCustomerBook includesCustomerNamed: PaulMcCartney ).!

!methodRemoval: CustomerBookTest #test07PruebasOK stamp: 'MG 10/13/2021 20:15:59'!
test07PruebasOK
	
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: RingoStarr .] 
		onError: CantSuspend 
		check: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].!

!methodRemoval: CustomerBookTest #test08PruebasOK stamp: 'MG 10/13/2021 20:15:59'!
test08PruebasOK
	| aCustomerBook |
			
	aCustomerBook := CustomerBook new.
	aCustomerBook addCustomerNamed: JohnLennon .
	aCustomerBook suspendCustomerNamed: JohnLennon .	
	
	self canNotDo:  [ aCustomerBook suspendCustomerNamed: JohnLennon .] 
		onError: CantSuspend 
		check: [:anError | self thereIsOnly: JohnLennon in: aCustomerBook ].!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 20:16:06'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 20:16:06'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 20:16:06'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:06'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:06'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:06'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:06'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 20:16:06'!
PASSED!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 20:16:09'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 20:16:09'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 20:16:09'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:09'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:09'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:09'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:09'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 20:16:09'!
PASSED!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 20:16:13'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 20:16:13'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 20:16:13'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:13'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:13'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:13'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:13'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 20:16:13'!
PASSED!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 20:16:18'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 20:16:18'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 20:16:18'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:18'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:18'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:18'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:18'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 20:16:18'!
PASSED!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 20:16:21'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 20:16:21'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 20:16:21'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:21'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:21'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:21'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:21'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 20:16:21'!
PASSED!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 20:16:29'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 20:16:29'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 20:16:29'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:29'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:29'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:29'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:29'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 20:16:29'!
PASSED!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 20:16:33'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 20:16:33'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 20:16:33'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:33'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:33'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 20:16:33'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 20:16:33'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 20:16:33'!
PASSED!

----QUIT----(13 October 2021 20:16:48) Ejercicio2.image priorSource: 23656!

----STARTUP---- (13 October 2021 22:55:27) as /home/tin-gprieto/Documentos/facultad/trabajos_practicos/algo3/repo/Resoluciones/Ejercicio2/Ejercicio2.image!


!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 22:57:30'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 22:57:30'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 22:57:30'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 22:57:30'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 22:57:30'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 22:57:30'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 22:57:30'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 22:57:30'!
PASSED!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 22:58:17'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 22:58:17'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 22:58:17'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 22:58:17'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 22:58:17'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 22:58:17'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 22:58:17'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 22:58:17'!
PASSED!

----QUIT----(13 October 2021 22:58:42) Ejercicio2.image priorSource: 59254!

----STARTUP---- (13 October 2021 23:06:02) as /home/tin-gprieto/Documentos/facultad/trabajos_practicos/algo3/repo/Resoluciones/Ejercicio2/Ejercicio2.image!


!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 23:06:11'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 23:06:11'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 23:06:11'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 23:06:11'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 23:06:11'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 23:06:11'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 23:06:11'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 23:06:11'!
PASSED!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 23:07:44'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 23:07:44'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 23:07:44'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 23:07:44'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 23:07:44'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 23:07:44'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 23:07:44'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 23:07:44'!
PASSED!

----QUIT----(13 October 2021 23:13:01) Ejercicio2.image priorSource: 61413!

----STARTUP---- (13 October 2021 23:15:15) as /home/tin-gprieto/Documentos/facultad/trabajos_practicos/algo3/repo/Resoluciones/Ejercicio2/Ejercicio2.image!


!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'MG 10/13/2021 23:15:23'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'MG 10/13/2021 23:15:23'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'MG 10/13/2021 23:15:23'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'MG 10/13/2021 23:15:23'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'MG 10/13/2021 23:15:23'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'MG 10/13/2021 23:15:23'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'MG 10/13/2021 23:15:23'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'MG 10/13/2021 23:15:23'!
PASSED!

----QUIT----(13 October 2021 23:15:47) Ejercicio2.image priorSource: 63572!

----STARTUP---- (13 October 2021 23:19:47) as /home/thiago/Documentos/Thiago/Algoritmos y Programacion III/Ejercicios-Algo3-2021/Ejercicios-algo3-2021/Resoluciones/Ejercicio2/Ejercicio2.image!


!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'tg 10/13/2021 23:20:27'!
PASSED!

!testRun: #CustomerBookTest #test01AddingCustomerShouldNotTakeMoreThan50Milliseconds stamp: 'tg 10/13/2021 23:20:32'!
PASSED!

!testRun: #CustomerBookTest #test02RemovingCustomerShouldNotTakeMoreThan100Milliseconds stamp: 'tg 10/13/2021 23:20:32'!
PASSED!

!testRun: #CustomerBookTest #test03CanNotAddACustomerWithEmptyName stamp: 'tg 10/13/2021 23:20:32'!
PASSED!

!testRun: #CustomerBookTest #test04CanNotRemoveAnInvalidCustomer stamp: 'tg 10/13/2021 23:20:32'!
PASSED!

!testRun: #CustomerBookTest #test05SuspendingACustomerShouldNotRemoveItFromCustomerBook stamp: 'tg 10/13/2021 23:20:32'!
PASSED!

!testRun: #CustomerBookTest #test06RemovingASuspendedCustomerShouldRemoveItFromCustomerBook stamp: 'tg 10/13/2021 23:20:32'!
PASSED!

!testRun: #CustomerBookTest #test07CanNotSuspendAnInvalidCustomer stamp: 'tg 10/13/2021 23:20:32'!
PASSED!

!testRun: #CustomerBookTest #test08CanNotSuspendAnAlreadySuspendedCustomer stamp: 'tg 10/13/2021 23:20:32'!
PASSED!

----QUIT----(13 October 2021 23:29:09) Ejercicio2.image priorSource: 64769!